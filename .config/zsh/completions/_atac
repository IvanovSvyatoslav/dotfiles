#compdef atac

autoload -U is-at-least

_atac() {
    typeset -A opt_args
    typeset -a _arguments_options
    local ret=1

    if is-at-least 5.2; then
        _arguments_options=(-s -S -C)
    else
        _arguments_options=(-s -C)
    fi

    local context curcontext="$curcontext" state line
    _arguments "${_arguments_options[@]}" : \
'-d+[Main application directory, containing JSON/YAML collections files, the atac.toml config file and the atac.log file]:DIRECTORY:_files -/' \
'--directory=[Main application directory, containing JSON/YAML collections files, the atac.toml config file and the atac.log file]:DIRECTORY:_files -/' \
'--dry-run[Avoid saving data to the collection and environment files]' \
'--no-ansi-log[Avoid using ANSI format for log file/output]' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help (see more with '\''--help'\'')]' \
'--help[Print help (see more with '\''--help'\'')]' \
'-V[Print version]' \
'--version[Print version]' \
":: :_atac_commands" \
"*::: :->atac" \
&& ret=0
    case $state in
    (atac)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:atac-command-$line[1]:"
        case $line[1] in
            (collection)
_arguments "${_arguments_options[@]}" : \
'--env=[Name of the environment to use]:ENV: ' \
'--dry-run[Avoid saving data to the collection and environment files]' \
'--no-ansi-log[Avoid using ANSI format for log file/output]' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
":: :_atac__collection_commands" \
"*::: :->collection" \
&& ret=0

    case $state in
    (collection)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:atac-collection-command-$line[1]:"
        case $line[1] in
            (list)
_arguments "${_arguments_options[@]}" : \
'--env=[Name of the environment to use]:ENV: ' \
'--request-names[Also print request names]' \
'--dry-run[Avoid saving data to the collection and environment files]' \
'--no-ansi-log[Avoid using ANSI format for log file/output]' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
&& ret=0
;;
(info)
_arguments "${_arguments_options[@]}" : \
'--env=[Name of the environment to use]:ENV: ' \
'--without-request-names[Also print request names]' \
'--dry-run[Avoid saving data to the collection and environment files]' \
'--no-ansi-log[Avoid using ANSI format for log file/output]' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
':collection_name -- Collection name:' \
&& ret=0
;;
(new)
_arguments "${_arguments_options[@]}" : \
'--env=[Name of the environment to use]:ENV: ' \
'--dry-run[Avoid saving data to the collection and environment files]' \
'--no-ansi-log[Avoid using ANSI format for log file/output]' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
':collection_name -- Collection name:' \
&& ret=0
;;
(delete)
_arguments "${_arguments_options[@]}" : \
'--env=[Name of the environment to use]:ENV: ' \
'--dry-run[Avoid saving data to the collection and environment files]' \
'--no-ansi-log[Avoid using ANSI format for log file/output]' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
':collection_name -- Collection name e.g. my_collection, "my collection":' \
&& ret=0
;;
(rename)
_arguments "${_arguments_options[@]}" : \
'--env=[Name of the environment to use]:ENV: ' \
'--dry-run[Avoid saving data to the collection and environment files]' \
'--no-ansi-log[Avoid using ANSI format for log file/output]' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
':collection_name -- e.g. my_collection, "my collection":' \
':new_collection_name -- New collection name:' \
&& ret=0
;;
(send)
_arguments "${_arguments_options[@]}" : \
'--env=[Name of the environment to use, e.g. my_env (from file .env.my_env)]:ENV_NAME: ' \
'--hide-content[Hide response content]' \
'--status-code[Show the status code]' \
'--duration[Show the duration]' \
'--headers[Show the response headers]' \
'--cookies[Show the response cookies]' \
'--console[Show the pre and post-request script console output]' \
'--request-name[Show the request name]' \
'--dry-run[Avoid saving data to the collection and environment files]' \
'--no-ansi-log[Avoid using ANSI format for log file/output]' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
':collection_name -- e.g. my_collection, "my collection":' \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" : \
":: :_atac__collection__help_commands" \
"*::: :->help" \
&& ret=0

    case $state in
    (help)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:atac-collection-help-command-$line[1]:"
        case $line[1] in
            (list)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(info)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(new)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(delete)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(rename)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(send)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
        esac
    ;;
esac
;;
        esac
    ;;
esac
;;
(request)
_arguments "${_arguments_options[@]}" : \
'--dry-run[Avoid saving data to the collection and environment files]' \
'--no-ansi-log[Avoid using ANSI format for log file/output]' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
":: :_atac__request_commands" \
"*::: :->request" \
&& ret=0

    case $state in
    (request)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:atac-request-command-$line[1]:"
        case $line[1] in
            (info)
_arguments "${_arguments_options[@]}" : \
'--dry-run[Avoid saving data to the collection and environment files]' \
'--no-ansi-log[Avoid using ANSI format for log file/output]' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
':collection_slash_request -- Request to describe e.g. my_collection/my_request:' \
&& ret=0
;;
(new)
_arguments "${_arguments_options[@]}" : \
'-u+[Request URL]:URL:_urls' \
'--url=[Request URL]:URL:_urls' \
'-m+[Request method]:METHOD: ' \
'--method=[Request method]:METHOD: ' \
'*--add-param=[Add a query param (can be used multiple times)]:KEY: :KEY: ' \
'--auth-basic=[Set a basic auth method]:USERNAME: :USERNAME: ' \
'--auth-bearer-token=[Set a bearer token auth method]:TOKEN: ' \
'*--add-header=[Add a header (can be used multiple times)]:KEY: :KEY: ' \
'--body-file=[Set a file body]:FILE_PATH:_files' \
'*--add-body-multipart=[Set a multipart form body (adds a value each time used)]:KEY: :KEY: ' \
'*--add-body-form=[Set a form body (adds a value each time used)]:KEY: :KEY: ' \
'--body-raw=[Set a raw test body]:TEXT: ' \
'--body-json=[Set a JSON body]:JSON: ' \
'--body-xml=[Set an XML body]:XML: ' \
'--body-html=[Set an HTML body]:HTML: ' \
'--body-javascript=[Set an JavaScript body]:JAVASCRIPT: ' \
'--pre-request-script=[Set a pre-request script]:PRE_REQUEST_SCRIPT: ' \
'--post-request-script=[Set a post-request script]:POST_REQUEST_SCRIPT: ' \
'--no-base-headers[Do not use base headers (cache-control, user-agent, accept, accept-encoding, connection)]' \
'--no-proxy[Do not use config proxy]' \
'--no-redirects[Do not allow redirects]' \
'--no-cookies[Do not store received cookies]' \
'--no-pretty[Do not pretty print response content]' \
'--accept-invalid-certs[]' \
'--dry-run[Avoid saving data to the collection and environment files]' \
'--no-ansi-log[Avoid using ANSI format for log file/output]' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
':collection_slash_request -- Request to create, e.g. my_collection/my_request:' \
&& ret=0
;;
(delete)
_arguments "${_arguments_options[@]}" : \
'--dry-run[Avoid saving data to the collection and environment files]' \
'--no-ansi-log[Avoid using ANSI format for log file/output]' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
':collection_slash_request -- Request to delete, e.g. my_collection/my_request:' \
&& ret=0
;;
(rename)
_arguments "${_arguments_options[@]}" : \
'--dry-run[Avoid saving data to the collection and environment files]' \
'--no-ansi-log[Avoid using ANSI format for log file/output]' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
':collection_slash_request -- Request to delete, e.g. my_collection/my_request:' \
':new_request_name -- New request name:' \
&& ret=0
;;
(url)
_arguments "${_arguments_options[@]}" : \
'--dry-run[Avoid saving data to the collection and environment files]' \
'--no-ansi-log[Avoid using ANSI format for log file/output]' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
':collection_slash_request -- e.g. my_collection/my_request:' \
":: :_atac__request__url_commands" \
"*::: :->url" \
&& ret=0

    case $state in
    (url)
        words=($line[2] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:atac-request-url-command-$line[2]:"
        case $line[2] in
            (get)
_arguments "${_arguments_options[@]}" : \
'--dry-run[Avoid saving data to the collection and environment files]' \
'--no-ansi-log[Avoid using ANSI format for log file/output]' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
&& ret=0
;;
(set)
_arguments "${_arguments_options[@]}" : \
'--dry-run[Avoid saving data to the collection and environment files]' \
'--no-ansi-log[Avoid using ANSI format for log file/output]' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
':new_url:_urls' \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" : \
":: :_atac__request__url__help_commands" \
"*::: :->help" \
&& ret=0

    case $state in
    (help)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:atac-request-url-help-command-$line[1]:"
        case $line[1] in
            (get)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(set)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
        esac
    ;;
esac
;;
        esac
    ;;
esac
;;
(method)
_arguments "${_arguments_options[@]}" : \
'--dry-run[Avoid saving data to the collection and environment files]' \
'--no-ansi-log[Avoid using ANSI format for log file/output]' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
':collection_slash_request -- e.g. my_collection/my_request:' \
":: :_atac__request__method_commands" \
"*::: :->method" \
&& ret=0

    case $state in
    (method)
        words=($line[2] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:atac-request-method-command-$line[2]:"
        case $line[2] in
            (get)
_arguments "${_arguments_options[@]}" : \
'--dry-run[Avoid saving data to the collection and environment files]' \
'--no-ansi-log[Avoid using ANSI format for log file/output]' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
&& ret=0
;;
(set)
_arguments "${_arguments_options[@]}" : \
'--dry-run[Avoid saving data to the collection and environment files]' \
'--no-ansi-log[Avoid using ANSI format for log file/output]' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
':new_method -- Method (GET, POST, PUT, PATCH, DELETE, HEAD, OPTION):' \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" : \
":: :_atac__request__method__help_commands" \
"*::: :->help" \
&& ret=0

    case $state in
    (help)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:atac-request-method-help-command-$line[1]:"
        case $line[1] in
            (get)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(set)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
        esac
    ;;
esac
;;
        esac
    ;;
esac
;;
(params)
_arguments "${_arguments_options[@]}" : \
'--dry-run[Avoid saving data to the collection and environment files]' \
'--no-ansi-log[Avoid using ANSI format for log file/output]' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
':collection_slash_request -- e.g. my_collection/my_request:' \
":: :_atac__request__params_commands" \
"*::: :->params" \
&& ret=0

    case $state in
    (params)
        words=($line[2] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:atac-request-params-command-$line[2]:"
        case $line[2] in
            (get)
_arguments "${_arguments_options[@]}" : \
'--dry-run[Avoid saving data to the collection and environment files]' \
'--no-ansi-log[Avoid using ANSI format for log file/output]' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
':key -- Key to get the value:' \
&& ret=0
;;
(set)
_arguments "${_arguments_options[@]}" : \
'--dry-run[Avoid saving data to the collection and environment files]' \
'--no-ansi-log[Avoid using ANSI format for log file/output]' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
':key -- Key to set the value:' \
':value -- Value to set:' \
&& ret=0
;;
(add)
_arguments "${_arguments_options[@]}" : \
'--dry-run[Avoid saving data to the collection and environment files]' \
'--no-ansi-log[Avoid using ANSI format for log file/output]' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
':key -- Key to add:' \
':value -- Value to set:' \
&& ret=0
;;
(delete)
_arguments "${_arguments_options[@]}" : \
'--dry-run[Avoid saving data to the collection and environment files]' \
'--no-ansi-log[Avoid using ANSI format for log file/output]' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
':key -- Key to delete:' \
&& ret=0
;;
(rename)
_arguments "${_arguments_options[@]}" : \
'--dry-run[Avoid saving data to the collection and environment files]' \
'--no-ansi-log[Avoid using ANSI format for log file/output]' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
':key -- Key to rename:' \
':new_key -- New key name:' \
&& ret=0
;;
(toggle)
_arguments "${_arguments_options[@]}" : \
'--dry-run[Avoid saving data to the collection and environment files]' \
'--no-ansi-log[Avoid using ANSI format for log file/output]' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
':key -- Key to get the value:' \
'::state -- Choose the state to apply:(true false)' \
&& ret=0
;;
(all)
_arguments "${_arguments_options[@]}" : \
'--dry-run[Avoid saving data to the collection and environment files]' \
'--no-ansi-log[Avoid using ANSI format for log file/output]' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" : \
":: :_atac__request__params__help_commands" \
"*::: :->help" \
&& ret=0

    case $state in
    (help)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:atac-request-params-help-command-$line[1]:"
        case $line[1] in
            (get)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(set)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(add)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(delete)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(rename)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(toggle)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(all)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
        esac
    ;;
esac
;;
        esac
    ;;
esac
;;
(auth)
_arguments "${_arguments_options[@]}" : \
'--dry-run[Avoid saving data to the collection and environment files]' \
'--no-ansi-log[Avoid using ANSI format for log file/output]' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
':collection_slash_request -- e.g. my_collection/my_request:' \
":: :_atac__request__auth_commands" \
"*::: :->auth" \
&& ret=0

    case $state in
    (auth)
        words=($line[2] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:atac-request-auth-command-$line[2]:"
        case $line[2] in
            (get)
_arguments "${_arguments_options[@]}" : \
'--dry-run[Avoid saving data to the collection and environment files]' \
'--no-ansi-log[Avoid using ANSI format for log file/output]' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
&& ret=0
;;
(set)
_arguments "${_arguments_options[@]}" : \
'--dry-run[Avoid saving data to the collection and environment files]' \
'--no-ansi-log[Avoid using ANSI format for log file/output]' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
":: :_atac__request__auth__set_commands" \
"*::: :->set" \
&& ret=0

    case $state in
    (set)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:atac-request-auth-set-command-$line[1]:"
        case $line[1] in
            (no-auth)
_arguments "${_arguments_options[@]}" : \
'--dry-run[Avoid saving data to the collection and environment files]' \
'--no-ansi-log[Avoid using ANSI format for log file/output]' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
&& ret=0
;;
(basic-auth)
_arguments "${_arguments_options[@]}" : \
'--dry-run[Avoid saving data to the collection and environment files]' \
'--no-ansi-log[Avoid using ANSI format for log file/output]' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
':username:' \
':password:' \
&& ret=0
;;
(basic)
_arguments "${_arguments_options[@]}" : \
'--dry-run[Avoid saving data to the collection and environment files]' \
'--no-ansi-log[Avoid using ANSI format for log file/output]' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
':username:' \
':password:' \
&& ret=0
;;
(bearer-token)
_arguments "${_arguments_options[@]}" : \
'--dry-run[Avoid saving data to the collection and environment files]' \
'--no-ansi-log[Avoid using ANSI format for log file/output]' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
':token:' \
&& ret=0
;;
(bearer)
_arguments "${_arguments_options[@]}" : \
'--dry-run[Avoid saving data to the collection and environment files]' \
'--no-ansi-log[Avoid using ANSI format for log file/output]' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
':token:' \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" : \
":: :_atac__request__auth__set__help_commands" \
"*::: :->help" \
&& ret=0

    case $state in
    (help)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:atac-request-auth-set-help-command-$line[1]:"
        case $line[1] in
            (no-auth)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(basic-auth)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(bearer-token)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
        esac
    ;;
esac
;;
        esac
    ;;
esac
;;
(help)
_arguments "${_arguments_options[@]}" : \
":: :_atac__request__auth__help_commands" \
"*::: :->help" \
&& ret=0

    case $state in
    (help)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:atac-request-auth-help-command-$line[1]:"
        case $line[1] in
            (get)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(set)
_arguments "${_arguments_options[@]}" : \
":: :_atac__request__auth__help__set_commands" \
"*::: :->set" \
&& ret=0

    case $state in
    (set)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:atac-request-auth-help-set-command-$line[1]:"
        case $line[1] in
            (no-auth)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(basic-auth)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(bearer-token)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
        esac
    ;;
esac
;;
(help)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
        esac
    ;;
esac
;;
        esac
    ;;
esac
;;
(header)
_arguments "${_arguments_options[@]}" : \
'--dry-run[Avoid saving data to the collection and environment files]' \
'--no-ansi-log[Avoid using ANSI format for log file/output]' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
':collection_slash_request -- e.g. my_collection/my_request:' \
":: :_atac__request__header_commands" \
"*::: :->header" \
&& ret=0

    case $state in
    (header)
        words=($line[2] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:atac-request-header-command-$line[2]:"
        case $line[2] in
            (get)
_arguments "${_arguments_options[@]}" : \
'--dry-run[Avoid saving data to the collection and environment files]' \
'--no-ansi-log[Avoid using ANSI format for log file/output]' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
':key -- Key to get the value:' \
&& ret=0
;;
(set)
_arguments "${_arguments_options[@]}" : \
'--dry-run[Avoid saving data to the collection and environment files]' \
'--no-ansi-log[Avoid using ANSI format for log file/output]' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
':key -- Key to set the value:' \
':value -- Value to set:' \
&& ret=0
;;
(add)
_arguments "${_arguments_options[@]}" : \
'--dry-run[Avoid saving data to the collection and environment files]' \
'--no-ansi-log[Avoid using ANSI format for log file/output]' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
':key -- Key to add:' \
':value -- Value to set:' \
&& ret=0
;;
(delete)
_arguments "${_arguments_options[@]}" : \
'--dry-run[Avoid saving data to the collection and environment files]' \
'--no-ansi-log[Avoid using ANSI format for log file/output]' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
':key -- Key to delete:' \
&& ret=0
;;
(rename)
_arguments "${_arguments_options[@]}" : \
'--dry-run[Avoid saving data to the collection and environment files]' \
'--no-ansi-log[Avoid using ANSI format for log file/output]' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
':key -- Key to rename:' \
':new_key -- New key name:' \
&& ret=0
;;
(toggle)
_arguments "${_arguments_options[@]}" : \
'--dry-run[Avoid saving data to the collection and environment files]' \
'--no-ansi-log[Avoid using ANSI format for log file/output]' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
':key -- Key to get the value:' \
'::state -- Choose the state to apply:(true false)' \
&& ret=0
;;
(all)
_arguments "${_arguments_options[@]}" : \
'--dry-run[Avoid saving data to the collection and environment files]' \
'--no-ansi-log[Avoid using ANSI format for log file/output]' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" : \
":: :_atac__request__header__help_commands" \
"*::: :->help" \
&& ret=0

    case $state in
    (help)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:atac-request-header-help-command-$line[1]:"
        case $line[1] in
            (get)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(set)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(add)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(delete)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(rename)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(toggle)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(all)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
        esac
    ;;
esac
;;
        esac
    ;;
esac
;;
(body)
_arguments "${_arguments_options[@]}" : \
'--dry-run[Avoid saving data to the collection and environment files]' \
'--no-ansi-log[Avoid using ANSI format for log file/output]' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
':collection_slash_request -- e.g. my_collection/my_request:' \
":: :_atac__request__body_commands" \
"*::: :->body" \
&& ret=0

    case $state in
    (body)
        words=($line[2] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:atac-request-body-command-$line[2]:"
        case $line[2] in
            (get)
_arguments "${_arguments_options[@]}" : \
'--dry-run[Avoid saving data to the collection and environment files]' \
'--no-ansi-log[Avoid using ANSI format for log file/output]' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
&& ret=0
;;
(set)
_arguments "${_arguments_options[@]}" : \
'--dry-run[Avoid saving data to the collection and environment files]' \
'--no-ansi-log[Avoid using ANSI format for log file/output]' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
":: :_atac__request__body__set_commands" \
"*::: :->set" \
&& ret=0

    case $state in
    (set)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:atac-request-body-set-command-$line[1]:"
        case $line[1] in
            (no-body)
_arguments "${_arguments_options[@]}" : \
'--dry-run[Avoid saving data to the collection and environment files]' \
'--no-ansi-log[Avoid using ANSI format for log file/output]' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
&& ret=0
;;
(file)
_arguments "${_arguments_options[@]}" : \
'--dry-run[Avoid saving data to the collection and environment files]' \
'--no-ansi-log[Avoid using ANSI format for log file/output]' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
':file_path:' \
&& ret=0
;;
(multipart)
_arguments "${_arguments_options[@]}" : \
'--dry-run[Avoid saving data to the collection and environment files]' \
'--no-ansi-log[Avoid using ANSI format for log file/output]' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
&& ret=0
;;
(form)
_arguments "${_arguments_options[@]}" : \
'--dry-run[Avoid saving data to the collection and environment files]' \
'--no-ansi-log[Avoid using ANSI format for log file/output]' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
&& ret=0
;;
(raw)
_arguments "${_arguments_options[@]}" : \
'--dry-run[Avoid saving data to the collection and environment files]' \
'--no-ansi-log[Avoid using ANSI format for log file/output]' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
':text:' \
&& ret=0
;;
(json)
_arguments "${_arguments_options[@]}" : \
'--dry-run[Avoid saving data to the collection and environment files]' \
'--no-ansi-log[Avoid using ANSI format for log file/output]' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
':json:' \
&& ret=0
;;
(xml)
_arguments "${_arguments_options[@]}" : \
'--dry-run[Avoid saving data to the collection and environment files]' \
'--no-ansi-log[Avoid using ANSI format for log file/output]' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
':xml:' \
&& ret=0
;;
(html)
_arguments "${_arguments_options[@]}" : \
'--dry-run[Avoid saving data to the collection and environment files]' \
'--no-ansi-log[Avoid using ANSI format for log file/output]' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
':html:' \
&& ret=0
;;
(javascript)
_arguments "${_arguments_options[@]}" : \
'--dry-run[Avoid saving data to the collection and environment files]' \
'--no-ansi-log[Avoid using ANSI format for log file/output]' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
':javascript:' \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" : \
":: :_atac__request__body__set__help_commands" \
"*::: :->help" \
&& ret=0

    case $state in
    (help)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:atac-request-body-set-help-command-$line[1]:"
        case $line[1] in
            (no-body)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(file)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(multipart)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(form)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(raw)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(json)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(xml)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(html)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(javascript)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
        esac
    ;;
esac
;;
        esac
    ;;
esac
;;
(key)
_arguments "${_arguments_options[@]}" : \
'--dry-run[Avoid saving data to the collection and environment files]' \
'--no-ansi-log[Avoid using ANSI format for log file/output]' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
":: :_atac__request__body__key_commands" \
"*::: :->key" \
&& ret=0

    case $state in
    (key)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:atac-request-body-key-command-$line[1]:"
        case $line[1] in
            (get)
_arguments "${_arguments_options[@]}" : \
'--dry-run[Avoid saving data to the collection and environment files]' \
'--no-ansi-log[Avoid using ANSI format for log file/output]' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
':key -- Key to get the value:' \
&& ret=0
;;
(set)
_arguments "${_arguments_options[@]}" : \
'--dry-run[Avoid saving data to the collection and environment files]' \
'--no-ansi-log[Avoid using ANSI format for log file/output]' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
':key -- Key to set the value:' \
':value -- Value to set:' \
&& ret=0
;;
(add)
_arguments "${_arguments_options[@]}" : \
'--dry-run[Avoid saving data to the collection and environment files]' \
'--no-ansi-log[Avoid using ANSI format for log file/output]' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
':key -- Key to add:' \
':value -- Value to set:' \
&& ret=0
;;
(delete)
_arguments "${_arguments_options[@]}" : \
'--dry-run[Avoid saving data to the collection and environment files]' \
'--no-ansi-log[Avoid using ANSI format for log file/output]' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
':key -- Key to delete:' \
&& ret=0
;;
(rename)
_arguments "${_arguments_options[@]}" : \
'--dry-run[Avoid saving data to the collection and environment files]' \
'--no-ansi-log[Avoid using ANSI format for log file/output]' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
':key -- Key to rename:' \
':new_key -- New key name:' \
&& ret=0
;;
(toggle)
_arguments "${_arguments_options[@]}" : \
'--dry-run[Avoid saving data to the collection and environment files]' \
'--no-ansi-log[Avoid using ANSI format for log file/output]' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
':key -- Key to get the value:' \
'::state -- Choose the state to apply:(true false)' \
&& ret=0
;;
(all)
_arguments "${_arguments_options[@]}" : \
'--dry-run[Avoid saving data to the collection and environment files]' \
'--no-ansi-log[Avoid using ANSI format for log file/output]' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" : \
":: :_atac__request__body__key__help_commands" \
"*::: :->help" \
&& ret=0

    case $state in
    (help)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:atac-request-body-key-help-command-$line[1]:"
        case $line[1] in
            (get)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(set)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(add)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(delete)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(rename)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(toggle)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(all)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
        esac
    ;;
esac
;;
        esac
    ;;
esac
;;
(help)
_arguments "${_arguments_options[@]}" : \
":: :_atac__request__body__help_commands" \
"*::: :->help" \
&& ret=0

    case $state in
    (help)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:atac-request-body-help-command-$line[1]:"
        case $line[1] in
            (get)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(set)
_arguments "${_arguments_options[@]}" : \
":: :_atac__request__body__help__set_commands" \
"*::: :->set" \
&& ret=0

    case $state in
    (set)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:atac-request-body-help-set-command-$line[1]:"
        case $line[1] in
            (no-body)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(file)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(multipart)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(form)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(raw)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(json)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(xml)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(html)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(javascript)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
        esac
    ;;
esac
;;
(key)
_arguments "${_arguments_options[@]}" : \
":: :_atac__request__body__help__key_commands" \
"*::: :->key" \
&& ret=0

    case $state in
    (key)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:atac-request-body-help-key-command-$line[1]:"
        case $line[1] in
            (get)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(set)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(add)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(delete)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(rename)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(toggle)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(all)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
        esac
    ;;
esac
;;
(help)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
        esac
    ;;
esac
;;
        esac
    ;;
esac
;;
(scripts)
_arguments "${_arguments_options[@]}" : \
'--dry-run[Avoid saving data to the collection and environment files]' \
'--no-ansi-log[Avoid using ANSI format for log file/output]' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
':collection_slash_request -- e.g. my_collection/my_request:' \
":: :_atac__request__scripts_commands" \
"*::: :->scripts" \
&& ret=0

    case $state in
    (scripts)
        words=($line[2] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:atac-request-scripts-command-$line[2]:"
        case $line[2] in
            (get)
_arguments "${_arguments_options[@]}" : \
'--dry-run[Avoid saving data to the collection and environment files]' \
'--no-ansi-log[Avoid using ANSI format for log file/output]' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
':script_type -- Pre or post:(pre post)' \
&& ret=0
;;
(set)
_arguments "${_arguments_options[@]}" : \
'--dry-run[Avoid saving data to the collection and environment files]' \
'--no-ansi-log[Avoid using ANSI format for log file/output]' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
':script_type -- Pre or post:(pre post)' \
'::script -- Script to set, leave empty to set it to none:' \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" : \
":: :_atac__request__scripts__help_commands" \
"*::: :->help" \
&& ret=0

    case $state in
    (help)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:atac-request-scripts-help-command-$line[1]:"
        case $line[1] in
            (get)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(set)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
        esac
    ;;
esac
;;
        esac
    ;;
esac
;;
(send)
_arguments "${_arguments_options[@]}" : \
'--env=[Name of the environment to use, e.g. my_env (from file .env.my_env)]:ENV_NAME: ' \
'--hide-content[Hide response content]' \
'--status-code[Show the status code]' \
'--duration[Show the duration]' \
'--headers[Show the response headers]' \
'--cookies[Show the response cookies]' \
'--console[Show the pre and post-request script console output]' \
'--request-name[Show the request name]' \
'--dry-run[Avoid saving data to the collection and environment files]' \
'--no-ansi-log[Avoid using ANSI format for log file/output]' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
':collection_slash_request -- Request to send e.g. my_collection/my_request:' \
&& ret=0
;;
(settings)
_arguments "${_arguments_options[@]}" : \
'--dry-run[Avoid saving data to the collection and environment files]' \
'--no-ansi-log[Avoid using ANSI format for log file/output]' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
':collection_slash_request -- e.g. my_collection/my_request:' \
":: :_atac__request__settings_commands" \
"*::: :->settings" \
&& ret=0

    case $state in
    (settings)
        words=($line[2] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:atac-request-settings-command-$line[2]:"
        case $line[2] in
            (all)
_arguments "${_arguments_options[@]}" : \
'--dry-run[Avoid saving data to the collection and environment files]' \
'--no-ansi-log[Avoid using ANSI format for log file/output]' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
&& ret=0
;;
(get)
_arguments "${_arguments_options[@]}" : \
'--dry-run[Avoid saving data to the collection and environment files]' \
'--no-ansi-log[Avoid using ANSI format for log file/output]' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help (see more with '\''--help'\'')]' \
'--help[Print help (see more with '\''--help'\'')]' \
':setting_name -- Setting name to get status:((proxy\:"Use config proxy"
redirects\:"Allow redirects"
cookies\:"Store received cookies"
pretty\:"Pretty print response content"))' \
&& ret=0
;;
(set)
_arguments "${_arguments_options[@]}" : \
'--dry-run[Avoid saving data to the collection and environment files]' \
'--no-ansi-log[Avoid using ANSI format for log file/output]' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help (see more with '\''--help'\'')]' \
'--help[Print help (see more with '\''--help'\'')]' \
':setting_name -- Setting name to set status:((proxy\:"Use config proxy"
redirects\:"Allow redirects"
cookies\:"Store received cookies"
pretty\:"Pretty print response content"))' \
':new_state -- New state to apply to the setting:(true false)' \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" : \
":: :_atac__request__settings__help_commands" \
"*::: :->help" \
&& ret=0

    case $state in
    (help)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:atac-request-settings-help-command-$line[1]:"
        case $line[1] in
            (all)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(get)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(set)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
        esac
    ;;
esac
;;
        esac
    ;;
esac
;;
(help)
_arguments "${_arguments_options[@]}" : \
":: :_atac__request__help_commands" \
"*::: :->help" \
&& ret=0

    case $state in
    (help)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:atac-request-help-command-$line[1]:"
        case $line[1] in
            (info)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(new)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(delete)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(rename)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(url)
_arguments "${_arguments_options[@]}" : \
":: :_atac__request__help__url_commands" \
"*::: :->url" \
&& ret=0

    case $state in
    (url)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:atac-request-help-url-command-$line[1]:"
        case $line[1] in
            (get)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(set)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
        esac
    ;;
esac
;;
(method)
_arguments "${_arguments_options[@]}" : \
":: :_atac__request__help__method_commands" \
"*::: :->method" \
&& ret=0

    case $state in
    (method)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:atac-request-help-method-command-$line[1]:"
        case $line[1] in
            (get)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(set)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
        esac
    ;;
esac
;;
(params)
_arguments "${_arguments_options[@]}" : \
":: :_atac__request__help__params_commands" \
"*::: :->params" \
&& ret=0

    case $state in
    (params)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:atac-request-help-params-command-$line[1]:"
        case $line[1] in
            (get)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(set)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(add)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(delete)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(rename)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(toggle)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(all)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
        esac
    ;;
esac
;;
(auth)
_arguments "${_arguments_options[@]}" : \
":: :_atac__request__help__auth_commands" \
"*::: :->auth" \
&& ret=0

    case $state in
    (auth)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:atac-request-help-auth-command-$line[1]:"
        case $line[1] in
            (get)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(set)
_arguments "${_arguments_options[@]}" : \
":: :_atac__request__help__auth__set_commands" \
"*::: :->set" \
&& ret=0

    case $state in
    (set)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:atac-request-help-auth-set-command-$line[1]:"
        case $line[1] in
            (no-auth)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(basic-auth)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(bearer-token)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
        esac
    ;;
esac
;;
        esac
    ;;
esac
;;
(header)
_arguments "${_arguments_options[@]}" : \
":: :_atac__request__help__header_commands" \
"*::: :->header" \
&& ret=0

    case $state in
    (header)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:atac-request-help-header-command-$line[1]:"
        case $line[1] in
            (get)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(set)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(add)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(delete)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(rename)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(toggle)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(all)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
        esac
    ;;
esac
;;
(body)
_arguments "${_arguments_options[@]}" : \
":: :_atac__request__help__body_commands" \
"*::: :->body" \
&& ret=0

    case $state in
    (body)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:atac-request-help-body-command-$line[1]:"
        case $line[1] in
            (get)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(set)
_arguments "${_arguments_options[@]}" : \
":: :_atac__request__help__body__set_commands" \
"*::: :->set" \
&& ret=0

    case $state in
    (set)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:atac-request-help-body-set-command-$line[1]:"
        case $line[1] in
            (no-body)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(file)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(multipart)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(form)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(raw)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(json)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(xml)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(html)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(javascript)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
        esac
    ;;
esac
;;
(key)
_arguments "${_arguments_options[@]}" : \
":: :_atac__request__help__body__key_commands" \
"*::: :->key" \
&& ret=0

    case $state in
    (key)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:atac-request-help-body-key-command-$line[1]:"
        case $line[1] in
            (get)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(set)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(add)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(delete)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(rename)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(toggle)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(all)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
        esac
    ;;
esac
;;
        esac
    ;;
esac
;;
(scripts)
_arguments "${_arguments_options[@]}" : \
":: :_atac__request__help__scripts_commands" \
"*::: :->scripts" \
&& ret=0

    case $state in
    (scripts)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:atac-request-help-scripts-command-$line[1]:"
        case $line[1] in
            (get)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(set)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
        esac
    ;;
esac
;;
(send)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(settings)
_arguments "${_arguments_options[@]}" : \
":: :_atac__request__help__settings_commands" \
"*::: :->settings" \
&& ret=0

    case $state in
    (settings)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:atac-request-help-settings-command-$line[1]:"
        case $line[1] in
            (all)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(get)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(set)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
        esac
    ;;
esac
;;
(help)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
        esac
    ;;
esac
;;
        esac
    ;;
esac
;;
(try)
_arguments "${_arguments_options[@]}" : \
'-u+[Request URL]:URL:_urls' \
'--url=[Request URL]:URL:_urls' \
'-m+[Request method]:METHOD: ' \
'--method=[Request method]:METHOD: ' \
'*--add-param=[Add a query param (can be used multiple times)]:KEY: :KEY: ' \
'--auth-basic=[Set a basic auth method]:USERNAME: :USERNAME: ' \
'--auth-bearer-token=[Set a bearer token auth method]:TOKEN: ' \
'*--add-header=[Add a header (can be used multiple times)]:KEY: :KEY: ' \
'--body-file=[Set a file body]:FILE_PATH:_files' \
'*--add-body-multipart=[Set a multipart form body (adds a value each time used)]:KEY: :KEY: ' \
'*--add-body-form=[Set a form body (adds a value each time used)]:KEY: :KEY: ' \
'--body-raw=[Set a raw test body]:TEXT: ' \
'--body-json=[Set a JSON body]:JSON: ' \
'--body-xml=[Set an XML body]:XML: ' \
'--body-html=[Set an HTML body]:HTML: ' \
'--body-javascript=[Set an JavaScript body]:JAVASCRIPT: ' \
'--pre-request-script=[Set a pre-request script]:PRE_REQUEST_SCRIPT: ' \
'--post-request-script=[Set a post-request script]:POST_REQUEST_SCRIPT: ' \
'--env=[Name of the environment to use, e.g. my_env (from file .env.my_env)]:ENV_NAME: ' \
'--no-base-headers[Do not use base headers (cache-control, user-agent, accept, accept-encoding, connection)]' \
'--no-proxy[Do not use config proxy]' \
'--no-redirects[Do not allow redirects]' \
'--no-cookies[Do not store received cookies]' \
'--no-pretty[Do not pretty print response content]' \
'--accept-invalid-certs[]' \
'--hide-content[Hide response content]' \
'--status-code[Show the status code]' \
'--duration[Show the duration]' \
'--headers[Show the response headers]' \
'--cookies[Show the response cookies]' \
'--console[Show the pre and post-request script console output]' \
'--request-name[Show the request name]' \
'--dry-run[Avoid saving data to the collection and environment files]' \
'--no-ansi-log[Avoid using ANSI format for log file/output]' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
&& ret=0
;;
(env)
_arguments "${_arguments_options[@]}" : \
'--dry-run[Avoid saving data to the collection and environment files]' \
'--no-ansi-log[Avoid using ANSI format for log file/output]' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
":: :_atac__env_commands" \
"*::: :->env" \
&& ret=0

    case $state in
    (env)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:atac-env-command-$line[1]:"
        case $line[1] in
            (info)
_arguments "${_arguments_options[@]}" : \
'--dry-run[Avoid saving data to the collection and environment files]' \
'--no-ansi-log[Avoid using ANSI format for log file/output]' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
':env_name -- e.g. my_env (from the file .env.my_env):' \
&& ret=0
;;
(key)
_arguments "${_arguments_options[@]}" : \
'--dry-run[Avoid saving data to the collection and environment files]' \
'--no-ansi-log[Avoid using ANSI format for log file/output]' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
':env_name -- e.g. my_env (from the file .env.my_env):' \
":: :_atac__env__key_commands" \
"*::: :->key" \
&& ret=0

    case $state in
    (key)
        words=($line[2] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:atac-env-key-command-$line[2]:"
        case $line[2] in
            (get)
_arguments "${_arguments_options[@]}" : \
'--dry-run[Avoid saving data to the collection and environment files]' \
'--no-ansi-log[Avoid using ANSI format for log file/output]' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
':key -- Key to get the value:' \
&& ret=0
;;
(set)
_arguments "${_arguments_options[@]}" : \
'--dry-run[Avoid saving data to the collection and environment files]' \
'--no-ansi-log[Avoid using ANSI format for log file/output]' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
':key -- Key to set the value:' \
':value -- Value to set:' \
&& ret=0
;;
(add)
_arguments "${_arguments_options[@]}" : \
'--dry-run[Avoid saving data to the collection and environment files]' \
'--no-ansi-log[Avoid using ANSI format for log file/output]' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
':key -- Key to add:' \
':value -- Value to set:' \
&& ret=0
;;
(delete)
_arguments "${_arguments_options[@]}" : \
'--dry-run[Avoid saving data to the collection and environment files]' \
'--no-ansi-log[Avoid using ANSI format for log file/output]' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
':key -- Key to delete:' \
&& ret=0
;;
(rename)
_arguments "${_arguments_options[@]}" : \
'--dry-run[Avoid saving data to the collection and environment files]' \
'--no-ansi-log[Avoid using ANSI format for log file/output]' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
':key -- Key to rename:' \
':new_key -- New key name:' \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" : \
":: :_atac__env__key__help_commands" \
"*::: :->help" \
&& ret=0

    case $state in
    (help)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:atac-env-key-help-command-$line[1]:"
        case $line[1] in
            (get)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(set)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(add)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(delete)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(rename)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
        esac
    ;;
esac
;;
        esac
    ;;
esac
;;
(help)
_arguments "${_arguments_options[@]}" : \
":: :_atac__env__help_commands" \
"*::: :->help" \
&& ret=0

    case $state in
    (help)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:atac-env-help-command-$line[1]:"
        case $line[1] in
            (info)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(key)
_arguments "${_arguments_options[@]}" : \
":: :_atac__env__help__key_commands" \
"*::: :->key" \
&& ret=0

    case $state in
    (key)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:atac-env-help-key-command-$line[1]:"
        case $line[1] in
            (get)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(set)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(add)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(delete)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(rename)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
        esac
    ;;
esac
;;
(help)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
        esac
    ;;
esac
;;
        esac
    ;;
esac
;;
(import)
_arguments "${_arguments_options[@]}" : \
'--dry-run[Avoid saving data to the collection and environment files]' \
'--no-ansi-log[Avoid using ANSI format for log file/output]' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
":: :_atac__import_commands" \
"*::: :->import" \
&& ret=0

    case $state in
    (import)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:atac-import-command-$line[1]:"
        case $line[1] in
            (postman)
_arguments "${_arguments_options[@]}" : \
'--max-depth=[Max depth at which import should stop creating nested collections and only get the deeper requests]:MAX_DEPTH: ' \
'--dry-run[Avoid saving data to the collection and environment files]' \
'--no-ansi-log[Avoid using ANSI format for log file/output]' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
':import_path -- Path to the file to import:_files' \
&& ret=0
;;
(curl)
_arguments "${_arguments_options[@]}" : \
'()--max-depth=[Max depth at which import should stop creating nested collections and only get the deeper requests]:MAX_DEPTH: ' \
'()-r[Search for deeper files]' \
'()--recursive[Search for deeper files]' \
'--dry-run[Avoid saving data to the collection and environment files]' \
'--no-ansi-log[Avoid using ANSI format for log file/output]' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
':import_path -- Path to the file/folder to import:_files' \
':collection_name -- Collection name to save the request to:' \
'::request_name -- Request name (will use the file name if none is provided):' \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" : \
":: :_atac__import__help_commands" \
"*::: :->help" \
&& ret=0

    case $state in
    (help)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:atac-import-help-command-$line[1]:"
        case $line[1] in
            (postman)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(curl)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
        esac
    ;;
esac
;;
        esac
    ;;
esac
;;
(completions)
_arguments "${_arguments_options[@]}" : \
'--dry-run[Avoid saving data to the collection and environment files]' \
'--no-ansi-log[Avoid using ANSI format for log file/output]' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
':shell -- The shell type. E.g. Bash, Powershell, Fish:' \
'::output_directory -- The path of the directory where to generate the file:_files' \
&& ret=0
;;
(man)
_arguments "${_arguments_options[@]}" : \
'--dry-run[Avoid saving data to the collection and environment files]' \
'--no-ansi-log[Avoid using ANSI format for log file/output]' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
'::output_directory -- The path of the directory where to generate the file On most linux distros it'\''s /usr/share/man/man1/:_files' \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" : \
":: :_atac__help_commands" \
"*::: :->help" \
&& ret=0

    case $state in
    (help)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:atac-help-command-$line[1]:"
        case $line[1] in
            (collection)
_arguments "${_arguments_options[@]}" : \
":: :_atac__help__collection_commands" \
"*::: :->collection" \
&& ret=0

    case $state in
    (collection)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:atac-help-collection-command-$line[1]:"
        case $line[1] in
            (list)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(info)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(new)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(delete)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(rename)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(send)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
        esac
    ;;
esac
;;
(request)
_arguments "${_arguments_options[@]}" : \
":: :_atac__help__request_commands" \
"*::: :->request" \
&& ret=0

    case $state in
    (request)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:atac-help-request-command-$line[1]:"
        case $line[1] in
            (info)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(new)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(delete)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(rename)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(url)
_arguments "${_arguments_options[@]}" : \
":: :_atac__help__request__url_commands" \
"*::: :->url" \
&& ret=0

    case $state in
    (url)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:atac-help-request-url-command-$line[1]:"
        case $line[1] in
            (get)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(set)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
        esac
    ;;
esac
;;
(method)
_arguments "${_arguments_options[@]}" : \
":: :_atac__help__request__method_commands" \
"*::: :->method" \
&& ret=0

    case $state in
    (method)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:atac-help-request-method-command-$line[1]:"
        case $line[1] in
            (get)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(set)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
        esac
    ;;
esac
;;
(params)
_arguments "${_arguments_options[@]}" : \
":: :_atac__help__request__params_commands" \
"*::: :->params" \
&& ret=0

    case $state in
    (params)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:atac-help-request-params-command-$line[1]:"
        case $line[1] in
            (get)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(set)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(add)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(delete)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(rename)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(toggle)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(all)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
        esac
    ;;
esac
;;
(auth)
_arguments "${_arguments_options[@]}" : \
":: :_atac__help__request__auth_commands" \
"*::: :->auth" \
&& ret=0

    case $state in
    (auth)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:atac-help-request-auth-command-$line[1]:"
        case $line[1] in
            (get)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(set)
_arguments "${_arguments_options[@]}" : \
":: :_atac__help__request__auth__set_commands" \
"*::: :->set" \
&& ret=0

    case $state in
    (set)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:atac-help-request-auth-set-command-$line[1]:"
        case $line[1] in
            (no-auth)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(basic-auth)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(bearer-token)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
        esac
    ;;
esac
;;
        esac
    ;;
esac
;;
(header)
_arguments "${_arguments_options[@]}" : \
":: :_atac__help__request__header_commands" \
"*::: :->header" \
&& ret=0

    case $state in
    (header)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:atac-help-request-header-command-$line[1]:"
        case $line[1] in
            (get)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(set)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(add)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(delete)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(rename)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(toggle)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(all)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
        esac
    ;;
esac
;;
(body)
_arguments "${_arguments_options[@]}" : \
":: :_atac__help__request__body_commands" \
"*::: :->body" \
&& ret=0

    case $state in
    (body)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:atac-help-request-body-command-$line[1]:"
        case $line[1] in
            (get)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(set)
_arguments "${_arguments_options[@]}" : \
":: :_atac__help__request__body__set_commands" \
"*::: :->set" \
&& ret=0

    case $state in
    (set)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:atac-help-request-body-set-command-$line[1]:"
        case $line[1] in
            (no-body)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(file)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(multipart)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(form)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(raw)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(json)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(xml)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(html)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(javascript)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
        esac
    ;;
esac
;;
(key)
_arguments "${_arguments_options[@]}" : \
":: :_atac__help__request__body__key_commands" \
"*::: :->key" \
&& ret=0

    case $state in
    (key)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:atac-help-request-body-key-command-$line[1]:"
        case $line[1] in
            (get)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(set)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(add)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(delete)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(rename)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(toggle)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(all)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
        esac
    ;;
esac
;;
        esac
    ;;
esac
;;
(scripts)
_arguments "${_arguments_options[@]}" : \
":: :_atac__help__request__scripts_commands" \
"*::: :->scripts" \
&& ret=0

    case $state in
    (scripts)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:atac-help-request-scripts-command-$line[1]:"
        case $line[1] in
            (get)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(set)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
        esac
    ;;
esac
;;
(send)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(settings)
_arguments "${_arguments_options[@]}" : \
":: :_atac__help__request__settings_commands" \
"*::: :->settings" \
&& ret=0

    case $state in
    (settings)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:atac-help-request-settings-command-$line[1]:"
        case $line[1] in
            (all)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(get)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(set)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
        esac
    ;;
esac
;;
        esac
    ;;
esac
;;
(try)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(env)
_arguments "${_arguments_options[@]}" : \
":: :_atac__help__env_commands" \
"*::: :->env" \
&& ret=0

    case $state in
    (env)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:atac-help-env-command-$line[1]:"
        case $line[1] in
            (info)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(key)
_arguments "${_arguments_options[@]}" : \
":: :_atac__help__env__key_commands" \
"*::: :->key" \
&& ret=0

    case $state in
    (key)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:atac-help-env-key-command-$line[1]:"
        case $line[1] in
            (get)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(set)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(add)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(delete)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(rename)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
        esac
    ;;
esac
;;
        esac
    ;;
esac
;;
(import)
_arguments "${_arguments_options[@]}" : \
":: :_atac__help__import_commands" \
"*::: :->import" \
&& ret=0

    case $state in
    (import)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:atac-help-import-command-$line[1]:"
        case $line[1] in
            (postman)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(curl)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
        esac
    ;;
esac
;;
(completions)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(man)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
        esac
    ;;
esac
;;
        esac
    ;;
esac
}

(( $+functions[_atac_commands] )) ||
_atac_commands() {
    local commands; commands=(
'collection:Collection commands' \
'request:Request commands' \
'try:One-shot request sender' \
'env:Environment commands' \
'import:Import a collection or a request from other file formats (Postman v2.1.0, cURL)' \
'completions:Create a completion file' \
'man:Generate ATAC man page' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'atac commands' commands "$@"
}
(( $+functions[_atac__collection_commands] )) ||
_atac__collection_commands() {
    local commands; commands=(
'list:List all collections' \
'info:Describe a collection' \
'new:Create a new collection' \
'delete:Delete a collection' \
'rename:Rename a collection' \
'send:Send all the collection'\''s requests' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'atac collection commands' commands "$@"
}
(( $+functions[_atac__collection__delete_commands] )) ||
_atac__collection__delete_commands() {
    local commands; commands=()
    _describe -t commands 'atac collection delete commands' commands "$@"
}
(( $+functions[_atac__collection__help_commands] )) ||
_atac__collection__help_commands() {
    local commands; commands=(
'list:List all collections' \
'info:Describe a collection' \
'new:Create a new collection' \
'delete:Delete a collection' \
'rename:Rename a collection' \
'send:Send all the collection'\''s requests' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'atac collection help commands' commands "$@"
}
(( $+functions[_atac__collection__help__delete_commands] )) ||
_atac__collection__help__delete_commands() {
    local commands; commands=()
    _describe -t commands 'atac collection help delete commands' commands "$@"
}
(( $+functions[_atac__collection__help__help_commands] )) ||
_atac__collection__help__help_commands() {
    local commands; commands=()
    _describe -t commands 'atac collection help help commands' commands "$@"
}
(( $+functions[_atac__collection__help__info_commands] )) ||
_atac__collection__help__info_commands() {
    local commands; commands=()
    _describe -t commands 'atac collection help info commands' commands "$@"
}
(( $+functions[_atac__collection__help__list_commands] )) ||
_atac__collection__help__list_commands() {
    local commands; commands=()
    _describe -t commands 'atac collection help list commands' commands "$@"
}
(( $+functions[_atac__collection__help__new_commands] )) ||
_atac__collection__help__new_commands() {
    local commands; commands=()
    _describe -t commands 'atac collection help new commands' commands "$@"
}
(( $+functions[_atac__collection__help__rename_commands] )) ||
_atac__collection__help__rename_commands() {
    local commands; commands=()
    _describe -t commands 'atac collection help rename commands' commands "$@"
}
(( $+functions[_atac__collection__help__send_commands] )) ||
_atac__collection__help__send_commands() {
    local commands; commands=()
    _describe -t commands 'atac collection help send commands' commands "$@"
}
(( $+functions[_atac__collection__info_commands] )) ||
_atac__collection__info_commands() {
    local commands; commands=()
    _describe -t commands 'atac collection info commands' commands "$@"
}
(( $+functions[_atac__collection__list_commands] )) ||
_atac__collection__list_commands() {
    local commands; commands=()
    _describe -t commands 'atac collection list commands' commands "$@"
}
(( $+functions[_atac__collection__new_commands] )) ||
_atac__collection__new_commands() {
    local commands; commands=()
    _describe -t commands 'atac collection new commands' commands "$@"
}
(( $+functions[_atac__collection__rename_commands] )) ||
_atac__collection__rename_commands() {
    local commands; commands=()
    _describe -t commands 'atac collection rename commands' commands "$@"
}
(( $+functions[_atac__collection__send_commands] )) ||
_atac__collection__send_commands() {
    local commands; commands=()
    _describe -t commands 'atac collection send commands' commands "$@"
}
(( $+functions[_atac__completions_commands] )) ||
_atac__completions_commands() {
    local commands; commands=()
    _describe -t commands 'atac completions commands' commands "$@"
}
(( $+functions[_atac__env_commands] )) ||
_atac__env_commands() {
    local commands; commands=(
'info:Describe an environment' \
'key:Add, get or set a key/value pair' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'atac env commands' commands "$@"
}
(( $+functions[_atac__env__help_commands] )) ||
_atac__env__help_commands() {
    local commands; commands=(
'info:Describe an environment' \
'key:Add, get or set a key/value pair' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'atac env help commands' commands "$@"
}
(( $+functions[_atac__env__help__help_commands] )) ||
_atac__env__help__help_commands() {
    local commands; commands=()
    _describe -t commands 'atac env help help commands' commands "$@"
}
(( $+functions[_atac__env__help__info_commands] )) ||
_atac__env__help__info_commands() {
    local commands; commands=()
    _describe -t commands 'atac env help info commands' commands "$@"
}
(( $+functions[_atac__env__help__key_commands] )) ||
_atac__env__help__key_commands() {
    local commands; commands=(
'get:Get the value paired to a key' \
'set:Set the value paired to a key' \
'add:Add a key value pair' \
'delete:Delete a key' \
'rename:Rename a key' \
    )
    _describe -t commands 'atac env help key commands' commands "$@"
}
(( $+functions[_atac__env__help__key__add_commands] )) ||
_atac__env__help__key__add_commands() {
    local commands; commands=()
    _describe -t commands 'atac env help key add commands' commands "$@"
}
(( $+functions[_atac__env__help__key__delete_commands] )) ||
_atac__env__help__key__delete_commands() {
    local commands; commands=()
    _describe -t commands 'atac env help key delete commands' commands "$@"
}
(( $+functions[_atac__env__help__key__get_commands] )) ||
_atac__env__help__key__get_commands() {
    local commands; commands=()
    _describe -t commands 'atac env help key get commands' commands "$@"
}
(( $+functions[_atac__env__help__key__rename_commands] )) ||
_atac__env__help__key__rename_commands() {
    local commands; commands=()
    _describe -t commands 'atac env help key rename commands' commands "$@"
}
(( $+functions[_atac__env__help__key__set_commands] )) ||
_atac__env__help__key__set_commands() {
    local commands; commands=()
    _describe -t commands 'atac env help key set commands' commands "$@"
}
(( $+functions[_atac__env__info_commands] )) ||
_atac__env__info_commands() {
    local commands; commands=()
    _describe -t commands 'atac env info commands' commands "$@"
}
(( $+functions[_atac__env__key_commands] )) ||
_atac__env__key_commands() {
    local commands; commands=(
'get:Get the value paired to a key' \
'set:Set the value paired to a key' \
'add:Add a key value pair' \
'delete:Delete a key' \
'rename:Rename a key' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'atac env key commands' commands "$@"
}
(( $+functions[_atac__env__key__add_commands] )) ||
_atac__env__key__add_commands() {
    local commands; commands=()
    _describe -t commands 'atac env key add commands' commands "$@"
}
(( $+functions[_atac__env__key__delete_commands] )) ||
_atac__env__key__delete_commands() {
    local commands; commands=()
    _describe -t commands 'atac env key delete commands' commands "$@"
}
(( $+functions[_atac__env__key__get_commands] )) ||
_atac__env__key__get_commands() {
    local commands; commands=()
    _describe -t commands 'atac env key get commands' commands "$@"
}
(( $+functions[_atac__env__key__help_commands] )) ||
_atac__env__key__help_commands() {
    local commands; commands=(
'get:Get the value paired to a key' \
'set:Set the value paired to a key' \
'add:Add a key value pair' \
'delete:Delete a key' \
'rename:Rename a key' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'atac env key help commands' commands "$@"
}
(( $+functions[_atac__env__key__help__add_commands] )) ||
_atac__env__key__help__add_commands() {
    local commands; commands=()
    _describe -t commands 'atac env key help add commands' commands "$@"
}
(( $+functions[_atac__env__key__help__delete_commands] )) ||
_atac__env__key__help__delete_commands() {
    local commands; commands=()
    _describe -t commands 'atac env key help delete commands' commands "$@"
}
(( $+functions[_atac__env__key__help__get_commands] )) ||
_atac__env__key__help__get_commands() {
    local commands; commands=()
    _describe -t commands 'atac env key help get commands' commands "$@"
}
(( $+functions[_atac__env__key__help__help_commands] )) ||
_atac__env__key__help__help_commands() {
    local commands; commands=()
    _describe -t commands 'atac env key help help commands' commands "$@"
}
(( $+functions[_atac__env__key__help__rename_commands] )) ||
_atac__env__key__help__rename_commands() {
    local commands; commands=()
    _describe -t commands 'atac env key help rename commands' commands "$@"
}
(( $+functions[_atac__env__key__help__set_commands] )) ||
_atac__env__key__help__set_commands() {
    local commands; commands=()
    _describe -t commands 'atac env key help set commands' commands "$@"
}
(( $+functions[_atac__env__key__rename_commands] )) ||
_atac__env__key__rename_commands() {
    local commands; commands=()
    _describe -t commands 'atac env key rename commands' commands "$@"
}
(( $+functions[_atac__env__key__set_commands] )) ||
_atac__env__key__set_commands() {
    local commands; commands=()
    _describe -t commands 'atac env key set commands' commands "$@"
}
(( $+functions[_atac__help_commands] )) ||
_atac__help_commands() {
    local commands; commands=(
'collection:Collection commands' \
'request:Request commands' \
'try:One-shot request sender' \
'env:Environment commands' \
'import:Import a collection or a request from other file formats (Postman v2.1.0, cURL)' \
'completions:Create a completion file' \
'man:Generate ATAC man page' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'atac help commands' commands "$@"
}
(( $+functions[_atac__help__collection_commands] )) ||
_atac__help__collection_commands() {
    local commands; commands=(
'list:List all collections' \
'info:Describe a collection' \
'new:Create a new collection' \
'delete:Delete a collection' \
'rename:Rename a collection' \
'send:Send all the collection'\''s requests' \
    )
    _describe -t commands 'atac help collection commands' commands "$@"
}
(( $+functions[_atac__help__collection__delete_commands] )) ||
_atac__help__collection__delete_commands() {
    local commands; commands=()
    _describe -t commands 'atac help collection delete commands' commands "$@"
}
(( $+functions[_atac__help__collection__info_commands] )) ||
_atac__help__collection__info_commands() {
    local commands; commands=()
    _describe -t commands 'atac help collection info commands' commands "$@"
}
(( $+functions[_atac__help__collection__list_commands] )) ||
_atac__help__collection__list_commands() {
    local commands; commands=()
    _describe -t commands 'atac help collection list commands' commands "$@"
}
(( $+functions[_atac__help__collection__new_commands] )) ||
_atac__help__collection__new_commands() {
    local commands; commands=()
    _describe -t commands 'atac help collection new commands' commands "$@"
}
(( $+functions[_atac__help__collection__rename_commands] )) ||
_atac__help__collection__rename_commands() {
    local commands; commands=()
    _describe -t commands 'atac help collection rename commands' commands "$@"
}
(( $+functions[_atac__help__collection__send_commands] )) ||
_atac__help__collection__send_commands() {
    local commands; commands=()
    _describe -t commands 'atac help collection send commands' commands "$@"
}
(( $+functions[_atac__help__completions_commands] )) ||
_atac__help__completions_commands() {
    local commands; commands=()
    _describe -t commands 'atac help completions commands' commands "$@"
}
(( $+functions[_atac__help__env_commands] )) ||
_atac__help__env_commands() {
    local commands; commands=(
'info:Describe an environment' \
'key:Add, get or set a key/value pair' \
    )
    _describe -t commands 'atac help env commands' commands "$@"
}
(( $+functions[_atac__help__env__info_commands] )) ||
_atac__help__env__info_commands() {
    local commands; commands=()
    _describe -t commands 'atac help env info commands' commands "$@"
}
(( $+functions[_atac__help__env__key_commands] )) ||
_atac__help__env__key_commands() {
    local commands; commands=(
'get:Get the value paired to a key' \
'set:Set the value paired to a key' \
'add:Add a key value pair' \
'delete:Delete a key' \
'rename:Rename a key' \
    )
    _describe -t commands 'atac help env key commands' commands "$@"
}
(( $+functions[_atac__help__env__key__add_commands] )) ||
_atac__help__env__key__add_commands() {
    local commands; commands=()
    _describe -t commands 'atac help env key add commands' commands "$@"
}
(( $+functions[_atac__help__env__key__delete_commands] )) ||
_atac__help__env__key__delete_commands() {
    local commands; commands=()
    _describe -t commands 'atac help env key delete commands' commands "$@"
}
(( $+functions[_atac__help__env__key__get_commands] )) ||
_atac__help__env__key__get_commands() {
    local commands; commands=()
    _describe -t commands 'atac help env key get commands' commands "$@"
}
(( $+functions[_atac__help__env__key__rename_commands] )) ||
_atac__help__env__key__rename_commands() {
    local commands; commands=()
    _describe -t commands 'atac help env key rename commands' commands "$@"
}
(( $+functions[_atac__help__env__key__set_commands] )) ||
_atac__help__env__key__set_commands() {
    local commands; commands=()
    _describe -t commands 'atac help env key set commands' commands "$@"
}
(( $+functions[_atac__help__help_commands] )) ||
_atac__help__help_commands() {
    local commands; commands=()
    _describe -t commands 'atac help help commands' commands "$@"
}
(( $+functions[_atac__help__import_commands] )) ||
_atac__help__import_commands() {
    local commands; commands=(
'postman:Import a Postman v2.1.0 file' \
'curl:Import a curl file' \
    )
    _describe -t commands 'atac help import commands' commands "$@"
}
(( $+functions[_atac__help__import__curl_commands] )) ||
_atac__help__import__curl_commands() {
    local commands; commands=()
    _describe -t commands 'atac help import curl commands' commands "$@"
}
(( $+functions[_atac__help__import__postman_commands] )) ||
_atac__help__import__postman_commands() {
    local commands; commands=()
    _describe -t commands 'atac help import postman commands' commands "$@"
}
(( $+functions[_atac__help__man_commands] )) ||
_atac__help__man_commands() {
    local commands; commands=()
    _describe -t commands 'atac help man commands' commands "$@"
}
(( $+functions[_atac__help__request_commands] )) ||
_atac__help__request_commands() {
    local commands; commands=(
'info:Describe a request' \
'new:Create a request' \
'delete:Delete a request' \
'rename:Rename a request' \
'url:Get or set a request URL' \
'method:Get or set a request method' \
'params:Get, set, add, delete, rename or toggle a query param' \
'auth:Get or set a request auth method' \
'header:Get, set, add, delete, rename or toggle a header' \
'body:Get or set a request body' \
'scripts:Get or set pre- and post-request scripts' \
'send:Send a request' \
'settings:Get or set a request setting' \
    )
    _describe -t commands 'atac help request commands' commands "$@"
}
(( $+functions[_atac__help__request__auth_commands] )) ||
_atac__help__request__auth_commands() {
    local commands; commands=(
'get:Print the current request auth method' \
'set:Set the request auth method' \
    )
    _describe -t commands 'atac help request auth commands' commands "$@"
}
(( $+functions[_atac__help__request__auth__get_commands] )) ||
_atac__help__request__auth__get_commands() {
    local commands; commands=()
    _describe -t commands 'atac help request auth get commands' commands "$@"
}
(( $+functions[_atac__help__request__auth__set_commands] )) ||
_atac__help__request__auth__set_commands() {
    local commands; commands=(
'no-auth:No auth method' \
'basic-auth:Basic auth method' \
'bearer-token:Bearer token auth method' \
    )
    _describe -t commands 'atac help request auth set commands' commands "$@"
}
(( $+functions[_atac__help__request__auth__set__basic-auth_commands] )) ||
_atac__help__request__auth__set__basic-auth_commands() {
    local commands; commands=()
    _describe -t commands 'atac help request auth set basic-auth commands' commands "$@"
}
(( $+functions[_atac__help__request__auth__set__bearer-token_commands] )) ||
_atac__help__request__auth__set__bearer-token_commands() {
    local commands; commands=()
    _describe -t commands 'atac help request auth set bearer-token commands' commands "$@"
}
(( $+functions[_atac__help__request__auth__set__no-auth_commands] )) ||
_atac__help__request__auth__set__no-auth_commands() {
    local commands; commands=()
    _describe -t commands 'atac help request auth set no-auth commands' commands "$@"
}
(( $+functions[_atac__help__request__body_commands] )) ||
_atac__help__request__body_commands() {
    local commands; commands=(
'get:Print the current request body' \
'set:Set the request body' \
'key:Add, get or set a key/value pair (multipart & form body only)' \
    )
    _describe -t commands 'atac help request body commands' commands "$@"
}
(( $+functions[_atac__help__request__body__get_commands] )) ||
_atac__help__request__body__get_commands() {
    local commands; commands=()
    _describe -t commands 'atac help request body get commands' commands "$@"
}
(( $+functions[_atac__help__request__body__key_commands] )) ||
_atac__help__request__body__key_commands() {
    local commands; commands=(
'get:Get the value paired to a key' \
'set:Set the value paired to a key' \
'add:Add a key value pair' \
'delete:Delete a key' \
'rename:Rename a key' \
'toggle:Toggle a key value pair' \
'all:Print all the key value pairs' \
    )
    _describe -t commands 'atac help request body key commands' commands "$@"
}
(( $+functions[_atac__help__request__body__key__add_commands] )) ||
_atac__help__request__body__key__add_commands() {
    local commands; commands=()
    _describe -t commands 'atac help request body key add commands' commands "$@"
}
(( $+functions[_atac__help__request__body__key__all_commands] )) ||
_atac__help__request__body__key__all_commands() {
    local commands; commands=()
    _describe -t commands 'atac help request body key all commands' commands "$@"
}
(( $+functions[_atac__help__request__body__key__delete_commands] )) ||
_atac__help__request__body__key__delete_commands() {
    local commands; commands=()
    _describe -t commands 'atac help request body key delete commands' commands "$@"
}
(( $+functions[_atac__help__request__body__key__get_commands] )) ||
_atac__help__request__body__key__get_commands() {
    local commands; commands=()
    _describe -t commands 'atac help request body key get commands' commands "$@"
}
(( $+functions[_atac__help__request__body__key__rename_commands] )) ||
_atac__help__request__body__key__rename_commands() {
    local commands; commands=()
    _describe -t commands 'atac help request body key rename commands' commands "$@"
}
(( $+functions[_atac__help__request__body__key__set_commands] )) ||
_atac__help__request__body__key__set_commands() {
    local commands; commands=()
    _describe -t commands 'atac help request body key set commands' commands "$@"
}
(( $+functions[_atac__help__request__body__key__toggle_commands] )) ||
_atac__help__request__body__key__toggle_commands() {
    local commands; commands=()
    _describe -t commands 'atac help request body key toggle commands' commands "$@"
}
(( $+functions[_atac__help__request__body__set_commands] )) ||
_atac__help__request__body__set_commands() {
    local commands; commands=(
'no-body:' \
'file:' \
'multipart:' \
'form:' \
'raw:' \
'json:' \
'xml:' \
'html:' \
'javascript:' \
    )
    _describe -t commands 'atac help request body set commands' commands "$@"
}
(( $+functions[_atac__help__request__body__set__file_commands] )) ||
_atac__help__request__body__set__file_commands() {
    local commands; commands=()
    _describe -t commands 'atac help request body set file commands' commands "$@"
}
(( $+functions[_atac__help__request__body__set__form_commands] )) ||
_atac__help__request__body__set__form_commands() {
    local commands; commands=()
    _describe -t commands 'atac help request body set form commands' commands "$@"
}
(( $+functions[_atac__help__request__body__set__html_commands] )) ||
_atac__help__request__body__set__html_commands() {
    local commands; commands=()
    _describe -t commands 'atac help request body set html commands' commands "$@"
}
(( $+functions[_atac__help__request__body__set__javascript_commands] )) ||
_atac__help__request__body__set__javascript_commands() {
    local commands; commands=()
    _describe -t commands 'atac help request body set javascript commands' commands "$@"
}
(( $+functions[_atac__help__request__body__set__json_commands] )) ||
_atac__help__request__body__set__json_commands() {
    local commands; commands=()
    _describe -t commands 'atac help request body set json commands' commands "$@"
}
(( $+functions[_atac__help__request__body__set__multipart_commands] )) ||
_atac__help__request__body__set__multipart_commands() {
    local commands; commands=()
    _describe -t commands 'atac help request body set multipart commands' commands "$@"
}
(( $+functions[_atac__help__request__body__set__no-body_commands] )) ||
_atac__help__request__body__set__no-body_commands() {
    local commands; commands=()
    _describe -t commands 'atac help request body set no-body commands' commands "$@"
}
(( $+functions[_atac__help__request__body__set__raw_commands] )) ||
_atac__help__request__body__set__raw_commands() {
    local commands; commands=()
    _describe -t commands 'atac help request body set raw commands' commands "$@"
}
(( $+functions[_atac__help__request__body__set__xml_commands] )) ||
_atac__help__request__body__set__xml_commands() {
    local commands; commands=()
    _describe -t commands 'atac help request body set xml commands' commands "$@"
}
(( $+functions[_atac__help__request__delete_commands] )) ||
_atac__help__request__delete_commands() {
    local commands; commands=()
    _describe -t commands 'atac help request delete commands' commands "$@"
}
(( $+functions[_atac__help__request__header_commands] )) ||
_atac__help__request__header_commands() {
    local commands; commands=(
'get:Get the value paired to a key' \
'set:Set the value paired to a key' \
'add:Add a key value pair' \
'delete:Delete a key' \
'rename:Rename a key' \
'toggle:Toggle a key value pair' \
'all:Print all the key value pairs' \
    )
    _describe -t commands 'atac help request header commands' commands "$@"
}
(( $+functions[_atac__help__request__header__add_commands] )) ||
_atac__help__request__header__add_commands() {
    local commands; commands=()
    _describe -t commands 'atac help request header add commands' commands "$@"
}
(( $+functions[_atac__help__request__header__all_commands] )) ||
_atac__help__request__header__all_commands() {
    local commands; commands=()
    _describe -t commands 'atac help request header all commands' commands "$@"
}
(( $+functions[_atac__help__request__header__delete_commands] )) ||
_atac__help__request__header__delete_commands() {
    local commands; commands=()
    _describe -t commands 'atac help request header delete commands' commands "$@"
}
(( $+functions[_atac__help__request__header__get_commands] )) ||
_atac__help__request__header__get_commands() {
    local commands; commands=()
    _describe -t commands 'atac help request header get commands' commands "$@"
}
(( $+functions[_atac__help__request__header__rename_commands] )) ||
_atac__help__request__header__rename_commands() {
    local commands; commands=()
    _describe -t commands 'atac help request header rename commands' commands "$@"
}
(( $+functions[_atac__help__request__header__set_commands] )) ||
_atac__help__request__header__set_commands() {
    local commands; commands=()
    _describe -t commands 'atac help request header set commands' commands "$@"
}
(( $+functions[_atac__help__request__header__toggle_commands] )) ||
_atac__help__request__header__toggle_commands() {
    local commands; commands=()
    _describe -t commands 'atac help request header toggle commands' commands "$@"
}
(( $+functions[_atac__help__request__info_commands] )) ||
_atac__help__request__info_commands() {
    local commands; commands=()
    _describe -t commands 'atac help request info commands' commands "$@"
}
(( $+functions[_atac__help__request__method_commands] )) ||
_atac__help__request__method_commands() {
    local commands; commands=(
'get:Print the current request method' \
'set:Set the request method' \
    )
    _describe -t commands 'atac help request method commands' commands "$@"
}
(( $+functions[_atac__help__request__method__get_commands] )) ||
_atac__help__request__method__get_commands() {
    local commands; commands=()
    _describe -t commands 'atac help request method get commands' commands "$@"
}
(( $+functions[_atac__help__request__method__set_commands] )) ||
_atac__help__request__method__set_commands() {
    local commands; commands=()
    _describe -t commands 'atac help request method set commands' commands "$@"
}
(( $+functions[_atac__help__request__new_commands] )) ||
_atac__help__request__new_commands() {
    local commands; commands=()
    _describe -t commands 'atac help request new commands' commands "$@"
}
(( $+functions[_atac__help__request__params_commands] )) ||
_atac__help__request__params_commands() {
    local commands; commands=(
'get:Get the value paired to a key' \
'set:Set the value paired to a key' \
'add:Add a key value pair' \
'delete:Delete a key' \
'rename:Rename a key' \
'toggle:Toggle a key value pair' \
'all:Print all the key value pairs' \
    )
    _describe -t commands 'atac help request params commands' commands "$@"
}
(( $+functions[_atac__help__request__params__add_commands] )) ||
_atac__help__request__params__add_commands() {
    local commands; commands=()
    _describe -t commands 'atac help request params add commands' commands "$@"
}
(( $+functions[_atac__help__request__params__all_commands] )) ||
_atac__help__request__params__all_commands() {
    local commands; commands=()
    _describe -t commands 'atac help request params all commands' commands "$@"
}
(( $+functions[_atac__help__request__params__delete_commands] )) ||
_atac__help__request__params__delete_commands() {
    local commands; commands=()
    _describe -t commands 'atac help request params delete commands' commands "$@"
}
(( $+functions[_atac__help__request__params__get_commands] )) ||
_atac__help__request__params__get_commands() {
    local commands; commands=()
    _describe -t commands 'atac help request params get commands' commands "$@"
}
(( $+functions[_atac__help__request__params__rename_commands] )) ||
_atac__help__request__params__rename_commands() {
    local commands; commands=()
    _describe -t commands 'atac help request params rename commands' commands "$@"
}
(( $+functions[_atac__help__request__params__set_commands] )) ||
_atac__help__request__params__set_commands() {
    local commands; commands=()
    _describe -t commands 'atac help request params set commands' commands "$@"
}
(( $+functions[_atac__help__request__params__toggle_commands] )) ||
_atac__help__request__params__toggle_commands() {
    local commands; commands=()
    _describe -t commands 'atac help request params toggle commands' commands "$@"
}
(( $+functions[_atac__help__request__rename_commands] )) ||
_atac__help__request__rename_commands() {
    local commands; commands=()
    _describe -t commands 'atac help request rename commands' commands "$@"
}
(( $+functions[_atac__help__request__scripts_commands] )) ||
_atac__help__request__scripts_commands() {
    local commands; commands=(
'get:Print the current pre- or post-request script' \
'set:Set a pre- or post-request script' \
    )
    _describe -t commands 'atac help request scripts commands' commands "$@"
}
(( $+functions[_atac__help__request__scripts__get_commands] )) ||
_atac__help__request__scripts__get_commands() {
    local commands; commands=()
    _describe -t commands 'atac help request scripts get commands' commands "$@"
}
(( $+functions[_atac__help__request__scripts__set_commands] )) ||
_atac__help__request__scripts__set_commands() {
    local commands; commands=()
    _describe -t commands 'atac help request scripts set commands' commands "$@"
}
(( $+functions[_atac__help__request__send_commands] )) ||
_atac__help__request__send_commands() {
    local commands; commands=()
    _describe -t commands 'atac help request send commands' commands "$@"
}
(( $+functions[_atac__help__request__settings_commands] )) ||
_atac__help__request__settings_commands() {
    local commands; commands=(
'all:Print all the request settings' \
'get:Print the current request setting' \
'set:Set the request method' \
    )
    _describe -t commands 'atac help request settings commands' commands "$@"
}
(( $+functions[_atac__help__request__settings__all_commands] )) ||
_atac__help__request__settings__all_commands() {
    local commands; commands=()
    _describe -t commands 'atac help request settings all commands' commands "$@"
}
(( $+functions[_atac__help__request__settings__get_commands] )) ||
_atac__help__request__settings__get_commands() {
    local commands; commands=()
    _describe -t commands 'atac help request settings get commands' commands "$@"
}
(( $+functions[_atac__help__request__settings__set_commands] )) ||
_atac__help__request__settings__set_commands() {
    local commands; commands=()
    _describe -t commands 'atac help request settings set commands' commands "$@"
}
(( $+functions[_atac__help__request__url_commands] )) ||
_atac__help__request__url_commands() {
    local commands; commands=(
'get:Print the current request URL' \
'set:Set the request URL' \
    )
    _describe -t commands 'atac help request url commands' commands "$@"
}
(( $+functions[_atac__help__request__url__get_commands] )) ||
_atac__help__request__url__get_commands() {
    local commands; commands=()
    _describe -t commands 'atac help request url get commands' commands "$@"
}
(( $+functions[_atac__help__request__url__set_commands] )) ||
_atac__help__request__url__set_commands() {
    local commands; commands=()
    _describe -t commands 'atac help request url set commands' commands "$@"
}
(( $+functions[_atac__help__try_commands] )) ||
_atac__help__try_commands() {
    local commands; commands=()
    _describe -t commands 'atac help try commands' commands "$@"
}
(( $+functions[_atac__import_commands] )) ||
_atac__import_commands() {
    local commands; commands=(
'postman:Import a Postman v2.1.0 file' \
'curl:Import a curl file' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'atac import commands' commands "$@"
}
(( $+functions[_atac__import__curl_commands] )) ||
_atac__import__curl_commands() {
    local commands; commands=()
    _describe -t commands 'atac import curl commands' commands "$@"
}
(( $+functions[_atac__import__help_commands] )) ||
_atac__import__help_commands() {
    local commands; commands=(
'postman:Import a Postman v2.1.0 file' \
'curl:Import a curl file' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'atac import help commands' commands "$@"
}
(( $+functions[_atac__import__help__curl_commands] )) ||
_atac__import__help__curl_commands() {
    local commands; commands=()
    _describe -t commands 'atac import help curl commands' commands "$@"
}
(( $+functions[_atac__import__help__help_commands] )) ||
_atac__import__help__help_commands() {
    local commands; commands=()
    _describe -t commands 'atac import help help commands' commands "$@"
}
(( $+functions[_atac__import__help__postman_commands] )) ||
_atac__import__help__postman_commands() {
    local commands; commands=()
    _describe -t commands 'atac import help postman commands' commands "$@"
}
(( $+functions[_atac__import__postman_commands] )) ||
_atac__import__postman_commands() {
    local commands; commands=()
    _describe -t commands 'atac import postman commands' commands "$@"
}
(( $+functions[_atac__man_commands] )) ||
_atac__man_commands() {
    local commands; commands=()
    _describe -t commands 'atac man commands' commands "$@"
}
(( $+functions[_atac__request_commands] )) ||
_atac__request_commands() {
    local commands; commands=(
'info:Describe a request' \
'new:Create a request' \
'delete:Delete a request' \
'rename:Rename a request' \
'url:Get or set a request URL' \
'method:Get or set a request method' \
'params:Get, set, add, delete, rename or toggle a query param' \
'auth:Get or set a request auth method' \
'header:Get, set, add, delete, rename or toggle a header' \
'body:Get or set a request body' \
'scripts:Get or set pre- and post-request scripts' \
'send:Send a request' \
'settings:Get or set a request setting' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'atac request commands' commands "$@"
}
(( $+functions[_atac__request__auth_commands] )) ||
_atac__request__auth_commands() {
    local commands; commands=(
'get:Print the current request auth method' \
'set:Set the request auth method' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'atac request auth commands' commands "$@"
}
(( $+functions[_atac__request__auth__get_commands] )) ||
_atac__request__auth__get_commands() {
    local commands; commands=()
    _describe -t commands 'atac request auth get commands' commands "$@"
}
(( $+functions[_atac__request__auth__help_commands] )) ||
_atac__request__auth__help_commands() {
    local commands; commands=(
'get:Print the current request auth method' \
'set:Set the request auth method' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'atac request auth help commands' commands "$@"
}
(( $+functions[_atac__request__auth__help__get_commands] )) ||
_atac__request__auth__help__get_commands() {
    local commands; commands=()
    _describe -t commands 'atac request auth help get commands' commands "$@"
}
(( $+functions[_atac__request__auth__help__help_commands] )) ||
_atac__request__auth__help__help_commands() {
    local commands; commands=()
    _describe -t commands 'atac request auth help help commands' commands "$@"
}
(( $+functions[_atac__request__auth__help__set_commands] )) ||
_atac__request__auth__help__set_commands() {
    local commands; commands=(
'no-auth:No auth method' \
'basic-auth:Basic auth method' \
'bearer-token:Bearer token auth method' \
    )
    _describe -t commands 'atac request auth help set commands' commands "$@"
}
(( $+functions[_atac__request__auth__help__set__basic-auth_commands] )) ||
_atac__request__auth__help__set__basic-auth_commands() {
    local commands; commands=()
    _describe -t commands 'atac request auth help set basic-auth commands' commands "$@"
}
(( $+functions[_atac__request__auth__help__set__bearer-token_commands] )) ||
_atac__request__auth__help__set__bearer-token_commands() {
    local commands; commands=()
    _describe -t commands 'atac request auth help set bearer-token commands' commands "$@"
}
(( $+functions[_atac__request__auth__help__set__no-auth_commands] )) ||
_atac__request__auth__help__set__no-auth_commands() {
    local commands; commands=()
    _describe -t commands 'atac request auth help set no-auth commands' commands "$@"
}
(( $+functions[_atac__request__auth__set_commands] )) ||
_atac__request__auth__set_commands() {
    local commands; commands=(
'no-auth:No auth method' \
'basic-auth:Basic auth method' \
'basic:Basic auth method' \
'bearer-token:Bearer token auth method' \
'bearer:Bearer token auth method' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'atac request auth set commands' commands "$@"
}
(( $+functions[_atac__request__auth__set__basic-auth_commands] )) ||
_atac__request__auth__set__basic-auth_commands() {
    local commands; commands=()
    _describe -t commands 'atac request auth set basic-auth commands' commands "$@"
}
(( $+functions[_atac__request__auth__set__bearer-token_commands] )) ||
_atac__request__auth__set__bearer-token_commands() {
    local commands; commands=()
    _describe -t commands 'atac request auth set bearer-token commands' commands "$@"
}
(( $+functions[_atac__request__auth__set__help_commands] )) ||
_atac__request__auth__set__help_commands() {
    local commands; commands=(
'no-auth:No auth method' \
'basic-auth:Basic auth method' \
'bearer-token:Bearer token auth method' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'atac request auth set help commands' commands "$@"
}
(( $+functions[_atac__request__auth__set__help__basic-auth_commands] )) ||
_atac__request__auth__set__help__basic-auth_commands() {
    local commands; commands=()
    _describe -t commands 'atac request auth set help basic-auth commands' commands "$@"
}
(( $+functions[_atac__request__auth__set__help__bearer-token_commands] )) ||
_atac__request__auth__set__help__bearer-token_commands() {
    local commands; commands=()
    _describe -t commands 'atac request auth set help bearer-token commands' commands "$@"
}
(( $+functions[_atac__request__auth__set__help__help_commands] )) ||
_atac__request__auth__set__help__help_commands() {
    local commands; commands=()
    _describe -t commands 'atac request auth set help help commands' commands "$@"
}
(( $+functions[_atac__request__auth__set__help__no-auth_commands] )) ||
_atac__request__auth__set__help__no-auth_commands() {
    local commands; commands=()
    _describe -t commands 'atac request auth set help no-auth commands' commands "$@"
}
(( $+functions[_atac__request__auth__set__no-auth_commands] )) ||
_atac__request__auth__set__no-auth_commands() {
    local commands; commands=()
    _describe -t commands 'atac request auth set no-auth commands' commands "$@"
}
(( $+functions[_atac__request__body_commands] )) ||
_atac__request__body_commands() {
    local commands; commands=(
'get:Print the current request body' \
'set:Set the request body' \
'key:Add, get or set a key/value pair (multipart & form body only)' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'atac request body commands' commands "$@"
}
(( $+functions[_atac__request__body__get_commands] )) ||
_atac__request__body__get_commands() {
    local commands; commands=()
    _describe -t commands 'atac request body get commands' commands "$@"
}
(( $+functions[_atac__request__body__help_commands] )) ||
_atac__request__body__help_commands() {
    local commands; commands=(
'get:Print the current request body' \
'set:Set the request body' \
'key:Add, get or set a key/value pair (multipart & form body only)' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'atac request body help commands' commands "$@"
}
(( $+functions[_atac__request__body__help__get_commands] )) ||
_atac__request__body__help__get_commands() {
    local commands; commands=()
    _describe -t commands 'atac request body help get commands' commands "$@"
}
(( $+functions[_atac__request__body__help__help_commands] )) ||
_atac__request__body__help__help_commands() {
    local commands; commands=()
    _describe -t commands 'atac request body help help commands' commands "$@"
}
(( $+functions[_atac__request__body__help__key_commands] )) ||
_atac__request__body__help__key_commands() {
    local commands; commands=(
'get:Get the value paired to a key' \
'set:Set the value paired to a key' \
'add:Add a key value pair' \
'delete:Delete a key' \
'rename:Rename a key' \
'toggle:Toggle a key value pair' \
'all:Print all the key value pairs' \
    )
    _describe -t commands 'atac request body help key commands' commands "$@"
}
(( $+functions[_atac__request__body__help__key__add_commands] )) ||
_atac__request__body__help__key__add_commands() {
    local commands; commands=()
    _describe -t commands 'atac request body help key add commands' commands "$@"
}
(( $+functions[_atac__request__body__help__key__all_commands] )) ||
_atac__request__body__help__key__all_commands() {
    local commands; commands=()
    _describe -t commands 'atac request body help key all commands' commands "$@"
}
(( $+functions[_atac__request__body__help__key__delete_commands] )) ||
_atac__request__body__help__key__delete_commands() {
    local commands; commands=()
    _describe -t commands 'atac request body help key delete commands' commands "$@"
}
(( $+functions[_atac__request__body__help__key__get_commands] )) ||
_atac__request__body__help__key__get_commands() {
    local commands; commands=()
    _describe -t commands 'atac request body help key get commands' commands "$@"
}
(( $+functions[_atac__request__body__help__key__rename_commands] )) ||
_atac__request__body__help__key__rename_commands() {
    local commands; commands=()
    _describe -t commands 'atac request body help key rename commands' commands "$@"
}
(( $+functions[_atac__request__body__help__key__set_commands] )) ||
_atac__request__body__help__key__set_commands() {
    local commands; commands=()
    _describe -t commands 'atac request body help key set commands' commands "$@"
}
(( $+functions[_atac__request__body__help__key__toggle_commands] )) ||
_atac__request__body__help__key__toggle_commands() {
    local commands; commands=()
    _describe -t commands 'atac request body help key toggle commands' commands "$@"
}
(( $+functions[_atac__request__body__help__set_commands] )) ||
_atac__request__body__help__set_commands() {
    local commands; commands=(
'no-body:' \
'file:' \
'multipart:' \
'form:' \
'raw:' \
'json:' \
'xml:' \
'html:' \
'javascript:' \
    )
    _describe -t commands 'atac request body help set commands' commands "$@"
}
(( $+functions[_atac__request__body__help__set__file_commands] )) ||
_atac__request__body__help__set__file_commands() {
    local commands; commands=()
    _describe -t commands 'atac request body help set file commands' commands "$@"
}
(( $+functions[_atac__request__body__help__set__form_commands] )) ||
_atac__request__body__help__set__form_commands() {
    local commands; commands=()
    _describe -t commands 'atac request body help set form commands' commands "$@"
}
(( $+functions[_atac__request__body__help__set__html_commands] )) ||
_atac__request__body__help__set__html_commands() {
    local commands; commands=()
    _describe -t commands 'atac request body help set html commands' commands "$@"
}
(( $+functions[_atac__request__body__help__set__javascript_commands] )) ||
_atac__request__body__help__set__javascript_commands() {
    local commands; commands=()
    _describe -t commands 'atac request body help set javascript commands' commands "$@"
}
(( $+functions[_atac__request__body__help__set__json_commands] )) ||
_atac__request__body__help__set__json_commands() {
    local commands; commands=()
    _describe -t commands 'atac request body help set json commands' commands "$@"
}
(( $+functions[_atac__request__body__help__set__multipart_commands] )) ||
_atac__request__body__help__set__multipart_commands() {
    local commands; commands=()
    _describe -t commands 'atac request body help set multipart commands' commands "$@"
}
(( $+functions[_atac__request__body__help__set__no-body_commands] )) ||
_atac__request__body__help__set__no-body_commands() {
    local commands; commands=()
    _describe -t commands 'atac request body help set no-body commands' commands "$@"
}
(( $+functions[_atac__request__body__help__set__raw_commands] )) ||
_atac__request__body__help__set__raw_commands() {
    local commands; commands=()
    _describe -t commands 'atac request body help set raw commands' commands "$@"
}
(( $+functions[_atac__request__body__help__set__xml_commands] )) ||
_atac__request__body__help__set__xml_commands() {
    local commands; commands=()
    _describe -t commands 'atac request body help set xml commands' commands "$@"
}
(( $+functions[_atac__request__body__key_commands] )) ||
_atac__request__body__key_commands() {
    local commands; commands=(
'get:Get the value paired to a key' \
'set:Set the value paired to a key' \
'add:Add a key value pair' \
'delete:Delete a key' \
'rename:Rename a key' \
'toggle:Toggle a key value pair' \
'all:Print all the key value pairs' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'atac request body key commands' commands "$@"
}
(( $+functions[_atac__request__body__key__add_commands] )) ||
_atac__request__body__key__add_commands() {
    local commands; commands=()
    _describe -t commands 'atac request body key add commands' commands "$@"
}
(( $+functions[_atac__request__body__key__all_commands] )) ||
_atac__request__body__key__all_commands() {
    local commands; commands=()
    _describe -t commands 'atac request body key all commands' commands "$@"
}
(( $+functions[_atac__request__body__key__delete_commands] )) ||
_atac__request__body__key__delete_commands() {
    local commands; commands=()
    _describe -t commands 'atac request body key delete commands' commands "$@"
}
(( $+functions[_atac__request__body__key__get_commands] )) ||
_atac__request__body__key__get_commands() {
    local commands; commands=()
    _describe -t commands 'atac request body key get commands' commands "$@"
}
(( $+functions[_atac__request__body__key__help_commands] )) ||
_atac__request__body__key__help_commands() {
    local commands; commands=(
'get:Get the value paired to a key' \
'set:Set the value paired to a key' \
'add:Add a key value pair' \
'delete:Delete a key' \
'rename:Rename a key' \
'toggle:Toggle a key value pair' \
'all:Print all the key value pairs' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'atac request body key help commands' commands "$@"
}
(( $+functions[_atac__request__body__key__help__add_commands] )) ||
_atac__request__body__key__help__add_commands() {
    local commands; commands=()
    _describe -t commands 'atac request body key help add commands' commands "$@"
}
(( $+functions[_atac__request__body__key__help__all_commands] )) ||
_atac__request__body__key__help__all_commands() {
    local commands; commands=()
    _describe -t commands 'atac request body key help all commands' commands "$@"
}
(( $+functions[_atac__request__body__key__help__delete_commands] )) ||
_atac__request__body__key__help__delete_commands() {
    local commands; commands=()
    _describe -t commands 'atac request body key help delete commands' commands "$@"
}
(( $+functions[_atac__request__body__key__help__get_commands] )) ||
_atac__request__body__key__help__get_commands() {
    local commands; commands=()
    _describe -t commands 'atac request body key help get commands' commands "$@"
}
(( $+functions[_atac__request__body__key__help__help_commands] )) ||
_atac__request__body__key__help__help_commands() {
    local commands; commands=()
    _describe -t commands 'atac request body key help help commands' commands "$@"
}
(( $+functions[_atac__request__body__key__help__rename_commands] )) ||
_atac__request__body__key__help__rename_commands() {
    local commands; commands=()
    _describe -t commands 'atac request body key help rename commands' commands "$@"
}
(( $+functions[_atac__request__body__key__help__set_commands] )) ||
_atac__request__body__key__help__set_commands() {
    local commands; commands=()
    _describe -t commands 'atac request body key help set commands' commands "$@"
}
(( $+functions[_atac__request__body__key__help__toggle_commands] )) ||
_atac__request__body__key__help__toggle_commands() {
    local commands; commands=()
    _describe -t commands 'atac request body key help toggle commands' commands "$@"
}
(( $+functions[_atac__request__body__key__rename_commands] )) ||
_atac__request__body__key__rename_commands() {
    local commands; commands=()
    _describe -t commands 'atac request body key rename commands' commands "$@"
}
(( $+functions[_atac__request__body__key__set_commands] )) ||
_atac__request__body__key__set_commands() {
    local commands; commands=()
    _describe -t commands 'atac request body key set commands' commands "$@"
}
(( $+functions[_atac__request__body__key__toggle_commands] )) ||
_atac__request__body__key__toggle_commands() {
    local commands; commands=()
    _describe -t commands 'atac request body key toggle commands' commands "$@"
}
(( $+functions[_atac__request__body__set_commands] )) ||
_atac__request__body__set_commands() {
    local commands; commands=(
'no-body:' \
'file:' \
'multipart:' \
'form:' \
'raw:' \
'json:' \
'xml:' \
'html:' \
'javascript:' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'atac request body set commands' commands "$@"
}
(( $+functions[_atac__request__body__set__file_commands] )) ||
_atac__request__body__set__file_commands() {
    local commands; commands=()
    _describe -t commands 'atac request body set file commands' commands "$@"
}
(( $+functions[_atac__request__body__set__form_commands] )) ||
_atac__request__body__set__form_commands() {
    local commands; commands=()
    _describe -t commands 'atac request body set form commands' commands "$@"
}
(( $+functions[_atac__request__body__set__help_commands] )) ||
_atac__request__body__set__help_commands() {
    local commands; commands=(
'no-body:' \
'file:' \
'multipart:' \
'form:' \
'raw:' \
'json:' \
'xml:' \
'html:' \
'javascript:' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'atac request body set help commands' commands "$@"
}
(( $+functions[_atac__request__body__set__help__file_commands] )) ||
_atac__request__body__set__help__file_commands() {
    local commands; commands=()
    _describe -t commands 'atac request body set help file commands' commands "$@"
}
(( $+functions[_atac__request__body__set__help__form_commands] )) ||
_atac__request__body__set__help__form_commands() {
    local commands; commands=()
    _describe -t commands 'atac request body set help form commands' commands "$@"
}
(( $+functions[_atac__request__body__set__help__help_commands] )) ||
_atac__request__body__set__help__help_commands() {
    local commands; commands=()
    _describe -t commands 'atac request body set help help commands' commands "$@"
}
(( $+functions[_atac__request__body__set__help__html_commands] )) ||
_atac__request__body__set__help__html_commands() {
    local commands; commands=()
    _describe -t commands 'atac request body set help html commands' commands "$@"
}
(( $+functions[_atac__request__body__set__help__javascript_commands] )) ||
_atac__request__body__set__help__javascript_commands() {
    local commands; commands=()
    _describe -t commands 'atac request body set help javascript commands' commands "$@"
}
(( $+functions[_atac__request__body__set__help__json_commands] )) ||
_atac__request__body__set__help__json_commands() {
    local commands; commands=()
    _describe -t commands 'atac request body set help json commands' commands "$@"
}
(( $+functions[_atac__request__body__set__help__multipart_commands] )) ||
_atac__request__body__set__help__multipart_commands() {
    local commands; commands=()
    _describe -t commands 'atac request body set help multipart commands' commands "$@"
}
(( $+functions[_atac__request__body__set__help__no-body_commands] )) ||
_atac__request__body__set__help__no-body_commands() {
    local commands; commands=()
    _describe -t commands 'atac request body set help no-body commands' commands "$@"
}
(( $+functions[_atac__request__body__set__help__raw_commands] )) ||
_atac__request__body__set__help__raw_commands() {
    local commands; commands=()
    _describe -t commands 'atac request body set help raw commands' commands "$@"
}
(( $+functions[_atac__request__body__set__help__xml_commands] )) ||
_atac__request__body__set__help__xml_commands() {
    local commands; commands=()
    _describe -t commands 'atac request body set help xml commands' commands "$@"
}
(( $+functions[_atac__request__body__set__html_commands] )) ||
_atac__request__body__set__html_commands() {
    local commands; commands=()
    _describe -t commands 'atac request body set html commands' commands "$@"
}
(( $+functions[_atac__request__body__set__javascript_commands] )) ||
_atac__request__body__set__javascript_commands() {
    local commands; commands=()
    _describe -t commands 'atac request body set javascript commands' commands "$@"
}
(( $+functions[_atac__request__body__set__json_commands] )) ||
_atac__request__body__set__json_commands() {
    local commands; commands=()
    _describe -t commands 'atac request body set json commands' commands "$@"
}
(( $+functions[_atac__request__body__set__multipart_commands] )) ||
_atac__request__body__set__multipart_commands() {
    local commands; commands=()
    _describe -t commands 'atac request body set multipart commands' commands "$@"
}
(( $+functions[_atac__request__body__set__no-body_commands] )) ||
_atac__request__body__set__no-body_commands() {
    local commands; commands=()
    _describe -t commands 'atac request body set no-body commands' commands "$@"
}
(( $+functions[_atac__request__body__set__raw_commands] )) ||
_atac__request__body__set__raw_commands() {
    local commands; commands=()
    _describe -t commands 'atac request body set raw commands' commands "$@"
}
(( $+functions[_atac__request__body__set__xml_commands] )) ||
_atac__request__body__set__xml_commands() {
    local commands; commands=()
    _describe -t commands 'atac request body set xml commands' commands "$@"
}
(( $+functions[_atac__request__delete_commands] )) ||
_atac__request__delete_commands() {
    local commands; commands=()
    _describe -t commands 'atac request delete commands' commands "$@"
}
(( $+functions[_atac__request__header_commands] )) ||
_atac__request__header_commands() {
    local commands; commands=(
'get:Get the value paired to a key' \
'set:Set the value paired to a key' \
'add:Add a key value pair' \
'delete:Delete a key' \
'rename:Rename a key' \
'toggle:Toggle a key value pair' \
'all:Print all the key value pairs' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'atac request header commands' commands "$@"
}
(( $+functions[_atac__request__header__add_commands] )) ||
_atac__request__header__add_commands() {
    local commands; commands=()
    _describe -t commands 'atac request header add commands' commands "$@"
}
(( $+functions[_atac__request__header__all_commands] )) ||
_atac__request__header__all_commands() {
    local commands; commands=()
    _describe -t commands 'atac request header all commands' commands "$@"
}
(( $+functions[_atac__request__header__delete_commands] )) ||
_atac__request__header__delete_commands() {
    local commands; commands=()
    _describe -t commands 'atac request header delete commands' commands "$@"
}
(( $+functions[_atac__request__header__get_commands] )) ||
_atac__request__header__get_commands() {
    local commands; commands=()
    _describe -t commands 'atac request header get commands' commands "$@"
}
(( $+functions[_atac__request__header__help_commands] )) ||
_atac__request__header__help_commands() {
    local commands; commands=(
'get:Get the value paired to a key' \
'set:Set the value paired to a key' \
'add:Add a key value pair' \
'delete:Delete a key' \
'rename:Rename a key' \
'toggle:Toggle a key value pair' \
'all:Print all the key value pairs' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'atac request header help commands' commands "$@"
}
(( $+functions[_atac__request__header__help__add_commands] )) ||
_atac__request__header__help__add_commands() {
    local commands; commands=()
    _describe -t commands 'atac request header help add commands' commands "$@"
}
(( $+functions[_atac__request__header__help__all_commands] )) ||
_atac__request__header__help__all_commands() {
    local commands; commands=()
    _describe -t commands 'atac request header help all commands' commands "$@"
}
(( $+functions[_atac__request__header__help__delete_commands] )) ||
_atac__request__header__help__delete_commands() {
    local commands; commands=()
    _describe -t commands 'atac request header help delete commands' commands "$@"
}
(( $+functions[_atac__request__header__help__get_commands] )) ||
_atac__request__header__help__get_commands() {
    local commands; commands=()
    _describe -t commands 'atac request header help get commands' commands "$@"
}
(( $+functions[_atac__request__header__help__help_commands] )) ||
_atac__request__header__help__help_commands() {
    local commands; commands=()
    _describe -t commands 'atac request header help help commands' commands "$@"
}
(( $+functions[_atac__request__header__help__rename_commands] )) ||
_atac__request__header__help__rename_commands() {
    local commands; commands=()
    _describe -t commands 'atac request header help rename commands' commands "$@"
}
(( $+functions[_atac__request__header__help__set_commands] )) ||
_atac__request__header__help__set_commands() {
    local commands; commands=()
    _describe -t commands 'atac request header help set commands' commands "$@"
}
(( $+functions[_atac__request__header__help__toggle_commands] )) ||
_atac__request__header__help__toggle_commands() {
    local commands; commands=()
    _describe -t commands 'atac request header help toggle commands' commands "$@"
}
(( $+functions[_atac__request__header__rename_commands] )) ||
_atac__request__header__rename_commands() {
    local commands; commands=()
    _describe -t commands 'atac request header rename commands' commands "$@"
}
(( $+functions[_atac__request__header__set_commands] )) ||
_atac__request__header__set_commands() {
    local commands; commands=()
    _describe -t commands 'atac request header set commands' commands "$@"
}
(( $+functions[_atac__request__header__toggle_commands] )) ||
_atac__request__header__toggle_commands() {
    local commands; commands=()
    _describe -t commands 'atac request header toggle commands' commands "$@"
}
(( $+functions[_atac__request__help_commands] )) ||
_atac__request__help_commands() {
    local commands; commands=(
'info:Describe a request' \
'new:Create a request' \
'delete:Delete a request' \
'rename:Rename a request' \
'url:Get or set a request URL' \
'method:Get or set a request method' \
'params:Get, set, add, delete, rename or toggle a query param' \
'auth:Get or set a request auth method' \
'header:Get, set, add, delete, rename or toggle a header' \
'body:Get or set a request body' \
'scripts:Get or set pre- and post-request scripts' \
'send:Send a request' \
'settings:Get or set a request setting' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'atac request help commands' commands "$@"
}
(( $+functions[_atac__request__help__auth_commands] )) ||
_atac__request__help__auth_commands() {
    local commands; commands=(
'get:Print the current request auth method' \
'set:Set the request auth method' \
    )
    _describe -t commands 'atac request help auth commands' commands "$@"
}
(( $+functions[_atac__request__help__auth__get_commands] )) ||
_atac__request__help__auth__get_commands() {
    local commands; commands=()
    _describe -t commands 'atac request help auth get commands' commands "$@"
}
(( $+functions[_atac__request__help__auth__set_commands] )) ||
_atac__request__help__auth__set_commands() {
    local commands; commands=(
'no-auth:No auth method' \
'basic-auth:Basic auth method' \
'bearer-token:Bearer token auth method' \
    )
    _describe -t commands 'atac request help auth set commands' commands "$@"
}
(( $+functions[_atac__request__help__auth__set__basic-auth_commands] )) ||
_atac__request__help__auth__set__basic-auth_commands() {
    local commands; commands=()
    _describe -t commands 'atac request help auth set basic-auth commands' commands "$@"
}
(( $+functions[_atac__request__help__auth__set__bearer-token_commands] )) ||
_atac__request__help__auth__set__bearer-token_commands() {
    local commands; commands=()
    _describe -t commands 'atac request help auth set bearer-token commands' commands "$@"
}
(( $+functions[_atac__request__help__auth__set__no-auth_commands] )) ||
_atac__request__help__auth__set__no-auth_commands() {
    local commands; commands=()
    _describe -t commands 'atac request help auth set no-auth commands' commands "$@"
}
(( $+functions[_atac__request__help__body_commands] )) ||
_atac__request__help__body_commands() {
    local commands; commands=(
'get:Print the current request body' \
'set:Set the request body' \
'key:Add, get or set a key/value pair (multipart & form body only)' \
    )
    _describe -t commands 'atac request help body commands' commands "$@"
}
(( $+functions[_atac__request__help__body__get_commands] )) ||
_atac__request__help__body__get_commands() {
    local commands; commands=()
    _describe -t commands 'atac request help body get commands' commands "$@"
}
(( $+functions[_atac__request__help__body__key_commands] )) ||
_atac__request__help__body__key_commands() {
    local commands; commands=(
'get:Get the value paired to a key' \
'set:Set the value paired to a key' \
'add:Add a key value pair' \
'delete:Delete a key' \
'rename:Rename a key' \
'toggle:Toggle a key value pair' \
'all:Print all the key value pairs' \
    )
    _describe -t commands 'atac request help body key commands' commands "$@"
}
(( $+functions[_atac__request__help__body__key__add_commands] )) ||
_atac__request__help__body__key__add_commands() {
    local commands; commands=()
    _describe -t commands 'atac request help body key add commands' commands "$@"
}
(( $+functions[_atac__request__help__body__key__all_commands] )) ||
_atac__request__help__body__key__all_commands() {
    local commands; commands=()
    _describe -t commands 'atac request help body key all commands' commands "$@"
}
(( $+functions[_atac__request__help__body__key__delete_commands] )) ||
_atac__request__help__body__key__delete_commands() {
    local commands; commands=()
    _describe -t commands 'atac request help body key delete commands' commands "$@"
}
(( $+functions[_atac__request__help__body__key__get_commands] )) ||
_atac__request__help__body__key__get_commands() {
    local commands; commands=()
    _describe -t commands 'atac request help body key get commands' commands "$@"
}
(( $+functions[_atac__request__help__body__key__rename_commands] )) ||
_atac__request__help__body__key__rename_commands() {
    local commands; commands=()
    _describe -t commands 'atac request help body key rename commands' commands "$@"
}
(( $+functions[_atac__request__help__body__key__set_commands] )) ||
_atac__request__help__body__key__set_commands() {
    local commands; commands=()
    _describe -t commands 'atac request help body key set commands' commands "$@"
}
(( $+functions[_atac__request__help__body__key__toggle_commands] )) ||
_atac__request__help__body__key__toggle_commands() {
    local commands; commands=()
    _describe -t commands 'atac request help body key toggle commands' commands "$@"
}
(( $+functions[_atac__request__help__body__set_commands] )) ||
_atac__request__help__body__set_commands() {
    local commands; commands=(
'no-body:' \
'file:' \
'multipart:' \
'form:' \
'raw:' \
'json:' \
'xml:' \
'html:' \
'javascript:' \
    )
    _describe -t commands 'atac request help body set commands' commands "$@"
}
(( $+functions[_atac__request__help__body__set__file_commands] )) ||
_atac__request__help__body__set__file_commands() {
    local commands; commands=()
    _describe -t commands 'atac request help body set file commands' commands "$@"
}
(( $+functions[_atac__request__help__body__set__form_commands] )) ||
_atac__request__help__body__set__form_commands() {
    local commands; commands=()
    _describe -t commands 'atac request help body set form commands' commands "$@"
}
(( $+functions[_atac__request__help__body__set__html_commands] )) ||
_atac__request__help__body__set__html_commands() {
    local commands; commands=()
    _describe -t commands 'atac request help body set html commands' commands "$@"
}
(( $+functions[_atac__request__help__body__set__javascript_commands] )) ||
_atac__request__help__body__set__javascript_commands() {
    local commands; commands=()
    _describe -t commands 'atac request help body set javascript commands' commands "$@"
}
(( $+functions[_atac__request__help__body__set__json_commands] )) ||
_atac__request__help__body__set__json_commands() {
    local commands; commands=()
    _describe -t commands 'atac request help body set json commands' commands "$@"
}
(( $+functions[_atac__request__help__body__set__multipart_commands] )) ||
_atac__request__help__body__set__multipart_commands() {
    local commands; commands=()
    _describe -t commands 'atac request help body set multipart commands' commands "$@"
}
(( $+functions[_atac__request__help__body__set__no-body_commands] )) ||
_atac__request__help__body__set__no-body_commands() {
    local commands; commands=()
    _describe -t commands 'atac request help body set no-body commands' commands "$@"
}
(( $+functions[_atac__request__help__body__set__raw_commands] )) ||
_atac__request__help__body__set__raw_commands() {
    local commands; commands=()
    _describe -t commands 'atac request help body set raw commands' commands "$@"
}
(( $+functions[_atac__request__help__body__set__xml_commands] )) ||
_atac__request__help__body__set__xml_commands() {
    local commands; commands=()
    _describe -t commands 'atac request help body set xml commands' commands "$@"
}
(( $+functions[_atac__request__help__delete_commands] )) ||
_atac__request__help__delete_commands() {
    local commands; commands=()
    _describe -t commands 'atac request help delete commands' commands "$@"
}
(( $+functions[_atac__request__help__header_commands] )) ||
_atac__request__help__header_commands() {
    local commands; commands=(
'get:Get the value paired to a key' \
'set:Set the value paired to a key' \
'add:Add a key value pair' \
'delete:Delete a key' \
'rename:Rename a key' \
'toggle:Toggle a key value pair' \
'all:Print all the key value pairs' \
    )
    _describe -t commands 'atac request help header commands' commands "$@"
}
(( $+functions[_atac__request__help__header__add_commands] )) ||
_atac__request__help__header__add_commands() {
    local commands; commands=()
    _describe -t commands 'atac request help header add commands' commands "$@"
}
(( $+functions[_atac__request__help__header__all_commands] )) ||
_atac__request__help__header__all_commands() {
    local commands; commands=()
    _describe -t commands 'atac request help header all commands' commands "$@"
}
(( $+functions[_atac__request__help__header__delete_commands] )) ||
_atac__request__help__header__delete_commands() {
    local commands; commands=()
    _describe -t commands 'atac request help header delete commands' commands "$@"
}
(( $+functions[_atac__request__help__header__get_commands] )) ||
_atac__request__help__header__get_commands() {
    local commands; commands=()
    _describe -t commands 'atac request help header get commands' commands "$@"
}
(( $+functions[_atac__request__help__header__rename_commands] )) ||
_atac__request__help__header__rename_commands() {
    local commands; commands=()
    _describe -t commands 'atac request help header rename commands' commands "$@"
}
(( $+functions[_atac__request__help__header__set_commands] )) ||
_atac__request__help__header__set_commands() {
    local commands; commands=()
    _describe -t commands 'atac request help header set commands' commands "$@"
}
(( $+functions[_atac__request__help__header__toggle_commands] )) ||
_atac__request__help__header__toggle_commands() {
    local commands; commands=()
    _describe -t commands 'atac request help header toggle commands' commands "$@"
}
(( $+functions[_atac__request__help__help_commands] )) ||
_atac__request__help__help_commands() {
    local commands; commands=()
    _describe -t commands 'atac request help help commands' commands "$@"
}
(( $+functions[_atac__request__help__info_commands] )) ||
_atac__request__help__info_commands() {
    local commands; commands=()
    _describe -t commands 'atac request help info commands' commands "$@"
}
(( $+functions[_atac__request__help__method_commands] )) ||
_atac__request__help__method_commands() {
    local commands; commands=(
'get:Print the current request method' \
'set:Set the request method' \
    )
    _describe -t commands 'atac request help method commands' commands "$@"
}
(( $+functions[_atac__request__help__method__get_commands] )) ||
_atac__request__help__method__get_commands() {
    local commands; commands=()
    _describe -t commands 'atac request help method get commands' commands "$@"
}
(( $+functions[_atac__request__help__method__set_commands] )) ||
_atac__request__help__method__set_commands() {
    local commands; commands=()
    _describe -t commands 'atac request help method set commands' commands "$@"
}
(( $+functions[_atac__request__help__new_commands] )) ||
_atac__request__help__new_commands() {
    local commands; commands=()
    _describe -t commands 'atac request help new commands' commands "$@"
}
(( $+functions[_atac__request__help__params_commands] )) ||
_atac__request__help__params_commands() {
    local commands; commands=(
'get:Get the value paired to a key' \
'set:Set the value paired to a key' \
'add:Add a key value pair' \
'delete:Delete a key' \
'rename:Rename a key' \
'toggle:Toggle a key value pair' \
'all:Print all the key value pairs' \
    )
    _describe -t commands 'atac request help params commands' commands "$@"
}
(( $+functions[_atac__request__help__params__add_commands] )) ||
_atac__request__help__params__add_commands() {
    local commands; commands=()
    _describe -t commands 'atac request help params add commands' commands "$@"
}
(( $+functions[_atac__request__help__params__all_commands] )) ||
_atac__request__help__params__all_commands() {
    local commands; commands=()
    _describe -t commands 'atac request help params all commands' commands "$@"
}
(( $+functions[_atac__request__help__params__delete_commands] )) ||
_atac__request__help__params__delete_commands() {
    local commands; commands=()
    _describe -t commands 'atac request help params delete commands' commands "$@"
}
(( $+functions[_atac__request__help__params__get_commands] )) ||
_atac__request__help__params__get_commands() {
    local commands; commands=()
    _describe -t commands 'atac request help params get commands' commands "$@"
}
(( $+functions[_atac__request__help__params__rename_commands] )) ||
_atac__request__help__params__rename_commands() {
    local commands; commands=()
    _describe -t commands 'atac request help params rename commands' commands "$@"
}
(( $+functions[_atac__request__help__params__set_commands] )) ||
_atac__request__help__params__set_commands() {
    local commands; commands=()
    _describe -t commands 'atac request help params set commands' commands "$@"
}
(( $+functions[_atac__request__help__params__toggle_commands] )) ||
_atac__request__help__params__toggle_commands() {
    local commands; commands=()
    _describe -t commands 'atac request help params toggle commands' commands "$@"
}
(( $+functions[_atac__request__help__rename_commands] )) ||
_atac__request__help__rename_commands() {
    local commands; commands=()
    _describe -t commands 'atac request help rename commands' commands "$@"
}
(( $+functions[_atac__request__help__scripts_commands] )) ||
_atac__request__help__scripts_commands() {
    local commands; commands=(
'get:Print the current pre- or post-request script' \
'set:Set a pre- or post-request script' \
    )
    _describe -t commands 'atac request help scripts commands' commands "$@"
}
(( $+functions[_atac__request__help__scripts__get_commands] )) ||
_atac__request__help__scripts__get_commands() {
    local commands; commands=()
    _describe -t commands 'atac request help scripts get commands' commands "$@"
}
(( $+functions[_atac__request__help__scripts__set_commands] )) ||
_atac__request__help__scripts__set_commands() {
    local commands; commands=()
    _describe -t commands 'atac request help scripts set commands' commands "$@"
}
(( $+functions[_atac__request__help__send_commands] )) ||
_atac__request__help__send_commands() {
    local commands; commands=()
    _describe -t commands 'atac request help send commands' commands "$@"
}
(( $+functions[_atac__request__help__settings_commands] )) ||
_atac__request__help__settings_commands() {
    local commands; commands=(
'all:Print all the request settings' \
'get:Print the current request setting' \
'set:Set the request method' \
    )
    _describe -t commands 'atac request help settings commands' commands "$@"
}
(( $+functions[_atac__request__help__settings__all_commands] )) ||
_atac__request__help__settings__all_commands() {
    local commands; commands=()
    _describe -t commands 'atac request help settings all commands' commands "$@"
}
(( $+functions[_atac__request__help__settings__get_commands] )) ||
_atac__request__help__settings__get_commands() {
    local commands; commands=()
    _describe -t commands 'atac request help settings get commands' commands "$@"
}
(( $+functions[_atac__request__help__settings__set_commands] )) ||
_atac__request__help__settings__set_commands() {
    local commands; commands=()
    _describe -t commands 'atac request help settings set commands' commands "$@"
}
(( $+functions[_atac__request__help__url_commands] )) ||
_atac__request__help__url_commands() {
    local commands; commands=(
'get:Print the current request URL' \
'set:Set the request URL' \
    )
    _describe -t commands 'atac request help url commands' commands "$@"
}
(( $+functions[_atac__request__help__url__get_commands] )) ||
_atac__request__help__url__get_commands() {
    local commands; commands=()
    _describe -t commands 'atac request help url get commands' commands "$@"
}
(( $+functions[_atac__request__help__url__set_commands] )) ||
_atac__request__help__url__set_commands() {
    local commands; commands=()
    _describe -t commands 'atac request help url set commands' commands "$@"
}
(( $+functions[_atac__request__info_commands] )) ||
_atac__request__info_commands() {
    local commands; commands=()
    _describe -t commands 'atac request info commands' commands "$@"
}
(( $+functions[_atac__request__method_commands] )) ||
_atac__request__method_commands() {
    local commands; commands=(
'get:Print the current request method' \
'set:Set the request method' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'atac request method commands' commands "$@"
}
(( $+functions[_atac__request__method__get_commands] )) ||
_atac__request__method__get_commands() {
    local commands; commands=()
    _describe -t commands 'atac request method get commands' commands "$@"
}
(( $+functions[_atac__request__method__help_commands] )) ||
_atac__request__method__help_commands() {
    local commands; commands=(
'get:Print the current request method' \
'set:Set the request method' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'atac request method help commands' commands "$@"
}
(( $+functions[_atac__request__method__help__get_commands] )) ||
_atac__request__method__help__get_commands() {
    local commands; commands=()
    _describe -t commands 'atac request method help get commands' commands "$@"
}
(( $+functions[_atac__request__method__help__help_commands] )) ||
_atac__request__method__help__help_commands() {
    local commands; commands=()
    _describe -t commands 'atac request method help help commands' commands "$@"
}
(( $+functions[_atac__request__method__help__set_commands] )) ||
_atac__request__method__help__set_commands() {
    local commands; commands=()
    _describe -t commands 'atac request method help set commands' commands "$@"
}
(( $+functions[_atac__request__method__set_commands] )) ||
_atac__request__method__set_commands() {
    local commands; commands=()
    _describe -t commands 'atac request method set commands' commands "$@"
}
(( $+functions[_atac__request__new_commands] )) ||
_atac__request__new_commands() {
    local commands; commands=()
    _describe -t commands 'atac request new commands' commands "$@"
}
(( $+functions[_atac__request__params_commands] )) ||
_atac__request__params_commands() {
    local commands; commands=(
'get:Get the value paired to a key' \
'set:Set the value paired to a key' \
'add:Add a key value pair' \
'delete:Delete a key' \
'rename:Rename a key' \
'toggle:Toggle a key value pair' \
'all:Print all the key value pairs' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'atac request params commands' commands "$@"
}
(( $+functions[_atac__request__params__add_commands] )) ||
_atac__request__params__add_commands() {
    local commands; commands=()
    _describe -t commands 'atac request params add commands' commands "$@"
}
(( $+functions[_atac__request__params__all_commands] )) ||
_atac__request__params__all_commands() {
    local commands; commands=()
    _describe -t commands 'atac request params all commands' commands "$@"
}
(( $+functions[_atac__request__params__delete_commands] )) ||
_atac__request__params__delete_commands() {
    local commands; commands=()
    _describe -t commands 'atac request params delete commands' commands "$@"
}
(( $+functions[_atac__request__params__get_commands] )) ||
_atac__request__params__get_commands() {
    local commands; commands=()
    _describe -t commands 'atac request params get commands' commands "$@"
}
(( $+functions[_atac__request__params__help_commands] )) ||
_atac__request__params__help_commands() {
    local commands; commands=(
'get:Get the value paired to a key' \
'set:Set the value paired to a key' \
'add:Add a key value pair' \
'delete:Delete a key' \
'rename:Rename a key' \
'toggle:Toggle a key value pair' \
'all:Print all the key value pairs' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'atac request params help commands' commands "$@"
}
(( $+functions[_atac__request__params__help__add_commands] )) ||
_atac__request__params__help__add_commands() {
    local commands; commands=()
    _describe -t commands 'atac request params help add commands' commands "$@"
}
(( $+functions[_atac__request__params__help__all_commands] )) ||
_atac__request__params__help__all_commands() {
    local commands; commands=()
    _describe -t commands 'atac request params help all commands' commands "$@"
}
(( $+functions[_atac__request__params__help__delete_commands] )) ||
_atac__request__params__help__delete_commands() {
    local commands; commands=()
    _describe -t commands 'atac request params help delete commands' commands "$@"
}
(( $+functions[_atac__request__params__help__get_commands] )) ||
_atac__request__params__help__get_commands() {
    local commands; commands=()
    _describe -t commands 'atac request params help get commands' commands "$@"
}
(( $+functions[_atac__request__params__help__help_commands] )) ||
_atac__request__params__help__help_commands() {
    local commands; commands=()
    _describe -t commands 'atac request params help help commands' commands "$@"
}
(( $+functions[_atac__request__params__help__rename_commands] )) ||
_atac__request__params__help__rename_commands() {
    local commands; commands=()
    _describe -t commands 'atac request params help rename commands' commands "$@"
}
(( $+functions[_atac__request__params__help__set_commands] )) ||
_atac__request__params__help__set_commands() {
    local commands; commands=()
    _describe -t commands 'atac request params help set commands' commands "$@"
}
(( $+functions[_atac__request__params__help__toggle_commands] )) ||
_atac__request__params__help__toggle_commands() {
    local commands; commands=()
    _describe -t commands 'atac request params help toggle commands' commands "$@"
}
(( $+functions[_atac__request__params__rename_commands] )) ||
_atac__request__params__rename_commands() {
    local commands; commands=()
    _describe -t commands 'atac request params rename commands' commands "$@"
}
(( $+functions[_atac__request__params__set_commands] )) ||
_atac__request__params__set_commands() {
    local commands; commands=()
    _describe -t commands 'atac request params set commands' commands "$@"
}
(( $+functions[_atac__request__params__toggle_commands] )) ||
_atac__request__params__toggle_commands() {
    local commands; commands=()
    _describe -t commands 'atac request params toggle commands' commands "$@"
}
(( $+functions[_atac__request__rename_commands] )) ||
_atac__request__rename_commands() {
    local commands; commands=()
    _describe -t commands 'atac request rename commands' commands "$@"
}
(( $+functions[_atac__request__scripts_commands] )) ||
_atac__request__scripts_commands() {
    local commands; commands=(
'get:Print the current pre- or post-request script' \
'set:Set a pre- or post-request script' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'atac request scripts commands' commands "$@"
}
(( $+functions[_atac__request__scripts__get_commands] )) ||
_atac__request__scripts__get_commands() {
    local commands; commands=()
    _describe -t commands 'atac request scripts get commands' commands "$@"
}
(( $+functions[_atac__request__scripts__help_commands] )) ||
_atac__request__scripts__help_commands() {
    local commands; commands=(
'get:Print the current pre- or post-request script' \
'set:Set a pre- or post-request script' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'atac request scripts help commands' commands "$@"
}
(( $+functions[_atac__request__scripts__help__get_commands] )) ||
_atac__request__scripts__help__get_commands() {
    local commands; commands=()
    _describe -t commands 'atac request scripts help get commands' commands "$@"
}
(( $+functions[_atac__request__scripts__help__help_commands] )) ||
_atac__request__scripts__help__help_commands() {
    local commands; commands=()
    _describe -t commands 'atac request scripts help help commands' commands "$@"
}
(( $+functions[_atac__request__scripts__help__set_commands] )) ||
_atac__request__scripts__help__set_commands() {
    local commands; commands=()
    _describe -t commands 'atac request scripts help set commands' commands "$@"
}
(( $+functions[_atac__request__scripts__set_commands] )) ||
_atac__request__scripts__set_commands() {
    local commands; commands=()
    _describe -t commands 'atac request scripts set commands' commands "$@"
}
(( $+functions[_atac__request__send_commands] )) ||
_atac__request__send_commands() {
    local commands; commands=()
    _describe -t commands 'atac request send commands' commands "$@"
}
(( $+functions[_atac__request__settings_commands] )) ||
_atac__request__settings_commands() {
    local commands; commands=(
'all:Print all the request settings' \
'get:Print the current request setting' \
'set:Set the request method' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'atac request settings commands' commands "$@"
}
(( $+functions[_atac__request__settings__all_commands] )) ||
_atac__request__settings__all_commands() {
    local commands; commands=()
    _describe -t commands 'atac request settings all commands' commands "$@"
}
(( $+functions[_atac__request__settings__get_commands] )) ||
_atac__request__settings__get_commands() {
    local commands; commands=()
    _describe -t commands 'atac request settings get commands' commands "$@"
}
(( $+functions[_atac__request__settings__help_commands] )) ||
_atac__request__settings__help_commands() {
    local commands; commands=(
'all:Print all the request settings' \
'get:Print the current request setting' \
'set:Set the request method' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'atac request settings help commands' commands "$@"
}
(( $+functions[_atac__request__settings__help__all_commands] )) ||
_atac__request__settings__help__all_commands() {
    local commands; commands=()
    _describe -t commands 'atac request settings help all commands' commands "$@"
}
(( $+functions[_atac__request__settings__help__get_commands] )) ||
_atac__request__settings__help__get_commands() {
    local commands; commands=()
    _describe -t commands 'atac request settings help get commands' commands "$@"
}
(( $+functions[_atac__request__settings__help__help_commands] )) ||
_atac__request__settings__help__help_commands() {
    local commands; commands=()
    _describe -t commands 'atac request settings help help commands' commands "$@"
}
(( $+functions[_atac__request__settings__help__set_commands] )) ||
_atac__request__settings__help__set_commands() {
    local commands; commands=()
    _describe -t commands 'atac request settings help set commands' commands "$@"
}
(( $+functions[_atac__request__settings__set_commands] )) ||
_atac__request__settings__set_commands() {
    local commands; commands=()
    _describe -t commands 'atac request settings set commands' commands "$@"
}
(( $+functions[_atac__request__url_commands] )) ||
_atac__request__url_commands() {
    local commands; commands=(
'get:Print the current request URL' \
'set:Set the request URL' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'atac request url commands' commands "$@"
}
(( $+functions[_atac__request__url__get_commands] )) ||
_atac__request__url__get_commands() {
    local commands; commands=()
    _describe -t commands 'atac request url get commands' commands "$@"
}
(( $+functions[_atac__request__url__help_commands] )) ||
_atac__request__url__help_commands() {
    local commands; commands=(
'get:Print the current request URL' \
'set:Set the request URL' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'atac request url help commands' commands "$@"
}
(( $+functions[_atac__request__url__help__get_commands] )) ||
_atac__request__url__help__get_commands() {
    local commands; commands=()
    _describe -t commands 'atac request url help get commands' commands "$@"
}
(( $+functions[_atac__request__url__help__help_commands] )) ||
_atac__request__url__help__help_commands() {
    local commands; commands=()
    _describe -t commands 'atac request url help help commands' commands "$@"
}
(( $+functions[_atac__request__url__help__set_commands] )) ||
_atac__request__url__help__set_commands() {
    local commands; commands=()
    _describe -t commands 'atac request url help set commands' commands "$@"
}
(( $+functions[_atac__request__url__set_commands] )) ||
_atac__request__url__set_commands() {
    local commands; commands=()
    _describe -t commands 'atac request url set commands' commands "$@"
}
(( $+functions[_atac__try_commands] )) ||
_atac__try_commands() {
    local commands; commands=()
    _describe -t commands 'atac try commands' commands "$@"
}

if [ "$funcstack[1]" = "_atac" ]; then
    _atac "$@"
else
    compdef _atac atac
fi
